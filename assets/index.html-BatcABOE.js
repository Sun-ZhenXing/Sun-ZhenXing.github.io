import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,b as t,a as n,w as a,d as e,e as p}from"./app-DhX54nll.js";const r={},y=t("h1",{id:"1-pyside6-简介",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#1-pyside6-简介"},[t("span",null,"1. PySide6 简介")])],-1),h={class:"table-of-contents"},P=p('<h2 id="11-pyside6-是什么" tabindex="-1"><a class="header-anchor" href="#11-pyside6-是什么"><span>1.1 PySide6 是什么</span></a></h2><div class="hint-container info"><p class="hint-container-title">知识准备</p><p>如果你阅读此教程，我们认为你对 GUI 概念和 Python 编程有初步的认识。</p></div><p>Python 最初是作为脚本语言开发的，核心功能中并没有包含 GUI 的支持。但 Python 借助其出色的 C 扩展性能够引入各种 C/C++ 库来增强功能。Python 现在的标准发行版已经引入了基本的 GUI 支持库 Tkinter，稍后我们讨论为什么选择 PySide6。</p><p>PySide 是跨平台的 GUI 框架 Qt 的 Python 版本。作为 Qt for Python 项目的一部分。和 Qt 一样，PySide 也是自由软件。PySide 支持 Linux/X11、Mac OS 和 Microsoft Windows。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><p>PySide6 是 Qt6 的 Python 版本，继承了 Qt6 所有的功能，而且相比以前的版本性能有所提升。PySide6 比 PySide2 更加稳定，且是 Qt 官方快速开发的活跃项目。</p><p>【Q】Python 下有哪些流行的 GUI 库？</p><p>【A】有 Python 绑定的 Tkinter、wxPython、PyGTK、PyQt 等。Tkinter 功能简单，开发繁琐，难以开发大型的、现代的应用。wxPython 和 PyGTK 等框架社区发展均不如 Qt，且大多跨平台能力不足，难以兼容各种操作系统。稍后我们将讨论 PyQt，这也是为我们熟知的流行 GUI 库。</p><p>【Q】PySide 一共有哪些版本？</p><p>【A】截至本文发布，主要有三个版本，分别是 PySide、PySide2 和 PySide6，如下表所示。</p><table><thead><tr><th>PySide 版本</th><th>对应 Qt 版本</th></tr></thead><tbody><tr><td>PySide</td><td>Qt 4</td></tr><tr><td>PySide2</td><td>Qt 5</td></tr><tr><td>PySide6</td><td>Qt 6</td></tr></tbody></table><p>【Q】PySide 的历史？</p><p>【A】2009 年，当时 Qt 的所有者诺基亚希望在 LGPL 许可下提供 Python 版本。诺基亚未能与 PyQt 的开发商 Riverbank Computing 达成协议。8 月，诺基亚发布了 PySide。它提供了类似的功能，但在 LGPL 许可下开源。Side 是芬兰语绑定的意思。</p><p>PySide2 由 Christian Tismer 启动，在 2015 年将 PySide 从 Qt 4 移植到 Qt 5。它于 2018 年 12 月发布。</p><p>PySide6 是在 2020 年 12 月发布的。它增加了对 Qt 6 的支持，并删除了对所有 3.6 以下的 Python 版本的支持。PySide6 现在使用自己的绑定生成器 Shiboken，减少二进制文件的大小和内存占用。</p><p>【Q】既然 PyQt 这么流行，甚至有各种不同版本 Qt 的良好支持（包括 PyQt4、PyQt5 和 PyQt6），为什么使用 PySide6？</p><p>【A】正如上面所示，PyQt 不是一个商业友好的软件，PyQt 使用 GPL 许可分发，这使得 PyQt 开发的程序必须全部开源。PySide6 是 Qt 官方开发，其产品有保证且允许使用 LGPL 许可分发。</p><h2 id="12-pyside6-安装" tabindex="-1"><a class="header-anchor" href="#12-pyside6-安装"><span>1.2 PySide6 安装</span></a></h2><div class="hint-container info"><p class="hint-container-title">确保你的 Python 版本满足 PySide6</p><p>前面的条件指出，PySide6 要求 Python 版本不能低于 3.6，如果你正在使用更低的版本或 Python 2.7 及以下来构建应用，那么本教程将不适合你。</p><p>本系列使用 Python 3.10 来演示，事实上，在主流系统中 PySide6 已经支持 Python 3.10 甚至 3.11，这意味你可以使用更新的特性。所以这里建议使用 Python 3.9 以上的版本。</p></div>',18),u=t("code",null,"venv",-1),S=p(`<p>安装：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> pyside6
</code></pre></div><p>如果以前已经安装过，需要完全卸载再重新安装：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip uninstall pyside6 pyside6-addons pyside6-essentials shiboken6
pip cache purge
pip <span class="token function">install</span> pyside6
</code></pre></div><p>查看已安装的版本：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">import</span> PySide6.QtCore
print<span class="token punctuation">(</span>PySide6.__version__<span class="token punctuation">)</span>
print<span class="token punctuation">(</span>PySide6.QtCore.__version__<span class="token punctuation">)</span>
</code></pre></div><p>输出：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token number">6.4</span>.2
<span class="token number">6.4</span>.2
</code></pre></div><h2 id="13-hello-pyside6" tabindex="-1"><a class="header-anchor" href="#13-hello-pyside6"><span>1.3 Hello PySide6</span></a></h2><p>使用你喜欢的 IDE 或者直接创建一个文件夹作为工作区。将下面的代码保存为 <a href="https://github.com/Sun-ZhenXing/vuepress-python-notes/tree/main/docs/pypi-package/pyside6/chapter01/src/main.py" target="_blank" rel="noopener noreferrer"><code>main.py</code></a>：</p><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> sys

<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QApplication<span class="token punctuation">,</span> QWidget

app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
window <span class="token operator">=</span> QWidget<span class="token punctuation">(</span><span class="token punctuation">)</span>
window<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><p>然后运行它，需要确保你使用的是 Python3 的正确版本：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python main.py
</code></pre></div><p>如果你看到窗口说明安装成功。</p><p><code>PySide6.QtWidgets</code> 模块中包含了各种窗口组件，这是我们最常用的模块之一，文本标签、按钮、多选框、布局、窗口等你能想到的布局，基本都能在这个模块中找到。</p><p>在进行任何和用户界面有关的操作之前，必须先创建 <code>QApplication</code> 应用，程序中的一切都必须发生在此应用中。<code>QApplication</code> 接收一个字符串数组作为参数，Python 中程序传入的参数为 <code>sys.argv</code>，所以可以直接传入。</p><p><code>window = QWidget()</code> 将创建一个简单窗体，下面使用 <code>window.show()</code> 方法将其显示出来。</p><p>到目前为止，界面还没有显示出来，我们需要执行这个应用，然后将此应用的返回值作为整个程序的返回值（这个步骤其实是惯例）。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>PySide，维基百科，<a href="https://en.wikipedia.org/wiki/PySide" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/PySide</a> <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li></ol></section>`,20);function k(g,m){const s=o("router-link"),i=o("RouteLink");return c(),l("div",null,[y,t("nav",h,[t("ul",null,[t("li",null,[n(s,{to:"#11-pyside6-是什么"},{default:a(()=>[e("1.1 PySide6 是什么")]),_:1})]),t("li",null,[n(s,{to:"#12-pyside6-安装"},{default:a(()=>[e("1.2 PySide6 安装")]),_:1})]),t("li",null,[n(s,{to:"#13-hello-pyside6"},{default:a(()=>[e("1.3 Hello PySide6")]),_:1})])])]),P,t("p",null,[e("首先需要计算机内安装有 Python，安装后推荐使用 "),u,e(" 等工具来 "),n(i,{to:"/posts/python/basic/stdlib/venv.html"},{default:a(()=>[e("创建虚拟环境")]),_:1}),e("，在新环境内开发 PySide6。")]),S])}const Q=d(r,[["render",k],["__file","index.html.vue"]]),v=JSON.parse('{"path":"/posts/python/packages/pyside6/chapter01/","title":"1. PySide6 简介","lang":"zh-CN","frontmatter":{"description":"1. PySide6 简介 1.1 PySide6 是什么 知识准备 如果你阅读此教程，我们认为你对 GUI 概念和 Python 编程有初步的认识。 Python 最初是作为脚本语言开发的，核心功能中并没有包含 GUI 的支持。但 Python 借助其出色的 C 扩展性能够引入各种 C/C++ 库来增强功能。Python 现在的标准发行版已经引入了基...","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/posts/python/packages/pyside6/chapter01/"}],["meta",{"property":"og:site_name","content":"鸭梨"}],["meta",{"property":"og:title","content":"1. PySide6 简介"}],["meta",{"property":"og:description","content":"1. PySide6 简介 1.1 PySide6 是什么 知识准备 如果你阅读此教程，我们认为你对 GUI 概念和 Python 编程有初步的认识。 Python 最初是作为脚本语言开发的，核心功能中并没有包含 GUI 的支持。但 Python 借助其出色的 C 扩展性能够引入各种 C/C++ 库来增强功能。Python 现在的标准发行版已经引入了基..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-27T04:16:18.000Z"}],["meta",{"property":"article:author","content":"Alex Sun"}],["meta",{"property":"article:modified_time","content":"2024-05-27T04:16:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1. PySide6 简介\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-27T04:16:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Alex Sun\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"1.1 PySide6 是什么","slug":"11-pyside6-是什么","link":"#11-pyside6-是什么","children":[]},{"level":2,"title":"1.2 PySide6 安装","slug":"12-pyside6-安装","link":"#12-pyside6-安装","children":[]},{"level":2,"title":"1.3 Hello PySide6","slug":"13-hello-pyside6","link":"#13-hello-pyside6","children":[]}],"git":{"createdTime":1716783378000,"updatedTime":1716783378000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":3.91,"words":1174},"filePathRelative":"posts/python/packages/pyside6/chapter01/index.md","localizedDate":"2024年5月27日","excerpt":"\\n\\n<h2>1.1 PySide6 是什么</h2>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">知识准备</p>\\n<p>如果你阅读此教程，我们认为你对 GUI 概念和 Python 编程有初步的认识。</p>\\n</div>\\n<p>Python 最初是作为脚本语言开发的，核心功能中并没有包含 GUI 的支持。但 Python 借助其出色的 C 扩展性能够引入各种 C/C++ 库来增强功能。Python 现在的标准发行版已经引入了基本的 GUI 支持库 Tkinter，稍后我们讨论为什么选择 PySide6。</p>","autoDesc":true}');export{Q as comp,v as data};
