import{_ as o,Y as e,Z as c,$ as l,a1 as n,a2 as a,a0 as t,a3 as p,E as i}from"./framework-b57d439c.js";const u={},r=n("p",null,"CUDA 安装、环境和版本等问题。",-1),k=p('<h2 id="_1-cuda-安装" tabindex="-1"><a class="header-anchor" href="#_1-cuda-安装" aria-hidden="true">#</a> 1. CUDA 安装</h2><p>不同的概念：</p><ul><li>显卡型号</li><li>显卡计算能力（Compute Capability）</li><li>驱动版本</li><li>CUDA</li><li>CUDA Toolkit</li><li>CuDNN</li><li>NVCC</li><li>PyTorch 依赖的 CUDA 和 CuDNN</li></ul><p>资源：</p>',4),d={href:"https://developer.nvidia.com/cuda-toolkit-archive",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,"参见：",-1),v={href:"https://mp.weixin.qq.com/s?__biz=MzI2NDkwNzU4Mg==&mid=2247483663&idx=1&sn=a5e6c06438523d0a2a1b303f35bbf4b2",target:"_blank",rel:"noopener noreferrer"},b=p(`<p>根据您的问题，您需要使用C++和OpenCV编写一个函数来打半透明斜条纹。您可以使用OpenCV的cv::Mat类来创建一个图像，然后使用cv::rectangle函数来绘制矩形。要绘制斜条纹，您可以使用cv::line函数。最后，您可以使用cv::addWeighted函数将图像与透明度相乘以创建半透明效果。</p><p>以下是一个可能的实现：</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/opencv.hpp&gt;</span></span>

<span class="token keyword">void</span> <span class="token function">drawTransparentStripes</span><span class="token punctuation">(</span>cv<span class="token double-colon punctuation">::</span>Mat<span class="token operator">&amp;</span> image<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">int</span> num_stripes<span class="token punctuation">,</span> <span class="token keyword">double</span> alpha<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Create a blank image with the same size as the input image</span>
    cv<span class="token double-colon punctuation">::</span>Mat overlay <span class="token operator">=</span> cv<span class="token double-colon punctuation">::</span><span class="token class-name">Mat</span><span class="token double-colon punctuation">::</span><span class="token function">zeros</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> image<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Calculate the width of each stripe</span>
    <span class="token keyword">int</span> stripe_width <span class="token operator">=</span> width <span class="token operator">/</span> num_stripes<span class="token punctuation">;</span>

    <span class="token comment">// Draw the stripes</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num_stripes<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cv<span class="token double-colon punctuation">::</span>Point <span class="token function">pt1</span><span class="token punctuation">(</span>i <span class="token operator">*</span> stripe_width<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cv<span class="token double-colon punctuation">::</span>Point <span class="token function">pt2</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> stripe_width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
        cv<span class="token double-colon punctuation">::</span>Scalar <span class="token function">color</span><span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">255</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cv<span class="token double-colon punctuation">::</span><span class="token function">line</span><span class="token punctuation">(</span>overlay<span class="token punctuation">,</span> pt1<span class="token punctuation">,</span> pt2<span class="token punctuation">,</span> color<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Apply the transparency</span>
    cv<span class="token double-colon punctuation">::</span><span class="token function">addWeighted</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">-</span> alpha<span class="token punctuation">,</span> overlay<span class="token punctuation">,</span> alpha<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> image<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

cv<span class="token double-colon punctuation">::</span>Mat image <span class="token operator">=</span> cv<span class="token double-colon punctuation">::</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">&quot;path/to/image.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">drawTransparentStripes</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> image<span class="token punctuation">.</span>cols<span class="token punctuation">,</span> image<span class="token punctuation">.</span>rows<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cv<span class="token double-colon punctuation">::</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">&quot;Image&quot;</span><span class="token punctuation">,</span> image<span class="token punctuation">)</span><span class="token punctuation">;</span>
cv<span class="token double-colon punctuation">::</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function h(_,g){const s=i("ExternalLinkIcon");return e(),c("div",null,[r,l(" more "),k,n("ul",null,[n("li",null,[n("a",d,[a("各种版本 CUDA 的下载页面"),t(s)])])]),m,n("ul",null,[n("li",null,[n("a",v,[a("NVVP 错误处理"),t(s)])])]),b])}const w=o(u,[["render",h],["__file","cuda-env.html.vue"]]);export{w as default};
