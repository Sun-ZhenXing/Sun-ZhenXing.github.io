import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as p,c as e,b as n,a as o,w as c,e as i,d as u}from"./app-DhX54nll.js";const l={},k=n("h1",{id:"9-使用-pyside6-构建高级应用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#9-使用-pyside6-构建高级应用"},[n("span",null,"9. 使用 PySide6 构建高级应用")])],-1),r={class:"table-of-contents"},d=i(`<h2 id="91-使用-opencv" tabindex="-1"><a class="header-anchor" href="#91-使用-opencv"><span>9.1 使用 OpenCV</span></a></h2><p>如果没有安装 OpenCV，可以使用下面的命令安装：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> opencv-python
</code></pre></div><p>下面我们来看一个使用 OpenCV 的例子，使用 OpenCV 读取摄像头的图像，并显示在窗口中。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> sys

<span class="token keyword">import</span> cv2
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> QTimer
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> QImage<span class="token punctuation">,</span> QPixmap
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QApplication<span class="token punctuation">,</span> QLabel<span class="token punctuation">,</span> QMainWindow


<span class="token keyword">class</span> <span class="token class-name">MainWindow</span><span class="token punctuation">(</span>QMainWindow<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token comment"># 使用 OpenCV 初始化摄像头</span>
        self<span class="token punctuation">.</span>_video <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

        <span class="token comment"># 初始化定时器</span>
        self<span class="token punctuation">.</span>timer <span class="token operator">=</span> QTimer<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>timer<span class="token punctuation">.</span>timeout<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>update_frame<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>timer<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>

        <span class="token comment"># 初始化 UI</span>
        self<span class="token punctuation">.</span>_image_label <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>_image_label<span class="token punctuation">.</span>setStyleSheet<span class="token punctuation">(</span><span class="token string">&quot;background-color: #000&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setCentralWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_image_label<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__del__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;释放资源&quot;&quot;&quot;</span>
        self<span class="token punctuation">.</span>_video<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">dispaly_frame</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> frame<span class="token punctuation">:</span> np<span class="token punctuation">.</span>ndarray<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;渲染帧&quot;&quot;&quot;</span>
        image <span class="token operator">=</span> QImage<span class="token punctuation">(</span>
            frame<span class="token punctuation">.</span>data<span class="token punctuation">,</span>
            frame<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            frame<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            frame<span class="token punctuation">.</span>strides<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            QImage<span class="token punctuation">.</span>Format<span class="token punctuation">.</span>Format_BGR888<span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>_image_label<span class="token punctuation">.</span>setPixmap<span class="token punctuation">(</span>QPixmap<span class="token punctuation">.</span>fromImage<span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">update_frame</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;更新帧&quot;&quot;&quot;</span>
        ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> self<span class="token punctuation">.</span>_video<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> ret<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>dispaly_frame<span class="token punctuation">(</span>frame<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    window <span class="token operator">=</span> MainWindow<span class="token punctuation">(</span><span class="token punctuation">)</span>
    window<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function m(v,f){const s=t("router-link");return p(),e("div",null,[k,n("nav",r,[n("ul",null,[n("li",null,[o(s,{to:"#91-使用-opencv"},{default:c(()=>[u("9.1 使用 OpenCV")]),_:1})])])]),d])}const b=a(l,[["render",m],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/posts/python/packages/pyside6/chapter09/","title":"9. 使用 PySide6 构建高级应用","lang":"zh-CN","frontmatter":{"description":"9. 使用 PySide6 构建高级应用 9.1 使用 OpenCV 如果没有安装 OpenCV，可以使用下面的命令安装： 下面我们来看一个使用 OpenCV 的例子，使用 OpenCV 读取摄像头的图像，并显示在窗口中。","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/posts/python/packages/pyside6/chapter09/"}],["meta",{"property":"og:site_name","content":"鸭梨"}],["meta",{"property":"og:title","content":"9. 使用 PySide6 构建高级应用"}],["meta",{"property":"og:description","content":"9. 使用 PySide6 构建高级应用 9.1 使用 OpenCV 如果没有安装 OpenCV，可以使用下面的命令安装： 下面我们来看一个使用 OpenCV 的例子，使用 OpenCV 读取摄像头的图像，并显示在窗口中。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-27T04:16:18.000Z"}],["meta",{"property":"article:author","content":"Alex Sun"}],["meta",{"property":"article:modified_time","content":"2024-05-27T04:16:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"9. 使用 PySide6 构建高级应用\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-27T04:16:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Alex Sun\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"9.1 使用 OpenCV","slug":"91-使用-opencv","link":"#91-使用-opencv","children":[]}],"git":{"createdTime":1716783378000,"updatedTime":1716783378000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":0.25,"words":74},"filePathRelative":"posts/python/packages/pyside6/chapter09/index.md","localizedDate":"2024年5月27日","excerpt":"\\n\\n<h2>9.1 使用 OpenCV</h2>\\n<p>如果没有安装 OpenCV，可以使用下面的命令安装：</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>pip <span class=\\"token function\\">install</span> opencv-python\\n</code></pre></div><p>下面我们来看一个使用 OpenCV 的例子，使用 OpenCV 读取摄像头的图像，并显示在窗口中。</p>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> sys\\n\\n<span class=\\"token keyword\\">import</span> cv2\\n<span class=\\"token keyword\\">import</span> numpy <span class=\\"token keyword\\">as</span> np\\n<span class=\\"token keyword\\">from</span> PySide6<span class=\\"token punctuation\\">.</span>QtCore <span class=\\"token keyword\\">import</span> QTimer\\n<span class=\\"token keyword\\">from</span> PySide6<span class=\\"token punctuation\\">.</span>QtGui <span class=\\"token keyword\\">import</span> QImage<span class=\\"token punctuation\\">,</span> QPixmap\\n<span class=\\"token keyword\\">from</span> PySide6<span class=\\"token punctuation\\">.</span>QtWidgets <span class=\\"token keyword\\">import</span> QApplication<span class=\\"token punctuation\\">,</span> QLabel<span class=\\"token punctuation\\">,</span> QMainWindow\\n\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">MainWindow</span><span class=\\"token punctuation\\">(</span>QMainWindow<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">__init__</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token builtin\\">super</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>__init__<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n        <span class=\\"token comment\\"># 使用 OpenCV 初始化摄像头</span>\\n        self<span class=\\"token punctuation\\">.</span>_video <span class=\\"token operator\\">=</span> cv2<span class=\\"token punctuation\\">.</span>VideoCapture<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span>\\n\\n        <span class=\\"token comment\\"># 初始化定时器</span>\\n        self<span class=\\"token punctuation\\">.</span>timer <span class=\\"token operator\\">=</span> QTimer<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        self<span class=\\"token punctuation\\">.</span>timer<span class=\\"token punctuation\\">.</span>timeout<span class=\\"token punctuation\\">.</span>connect<span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">.</span>update_frame<span class=\\"token punctuation\\">)</span>\\n        self<span class=\\"token punctuation\\">.</span>timer<span class=\\"token punctuation\\">.</span>start<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">30</span><span class=\\"token punctuation\\">)</span>\\n\\n        <span class=\\"token comment\\"># 初始化 UI</span>\\n        self<span class=\\"token punctuation\\">.</span>_image_label <span class=\\"token operator\\">=</span> QLabel<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        self<span class=\\"token punctuation\\">.</span>_image_label<span class=\\"token punctuation\\">.</span>setStyleSheet<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"background-color: #000\\"</span><span class=\\"token punctuation\\">)</span>\\n        self<span class=\\"token punctuation\\">.</span>setCentralWidget<span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">.</span>_image_label<span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">__del__</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"释放资源\\"\\"\\"</span>\\n        self<span class=\\"token punctuation\\">.</span>_video<span class=\\"token punctuation\\">.</span>release<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">dispaly_frame</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> frame<span class=\\"token punctuation\\">:</span> np<span class=\\"token punctuation\\">.</span>ndarray<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"渲染帧\\"\\"\\"</span>\\n        image <span class=\\"token operator\\">=</span> QImage<span class=\\"token punctuation\\">(</span>\\n            frame<span class=\\"token punctuation\\">.</span>data<span class=\\"token punctuation\\">,</span>\\n            frame<span class=\\"token punctuation\\">.</span>shape<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n            frame<span class=\\"token punctuation\\">.</span>shape<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n            frame<span class=\\"token punctuation\\">.</span>strides<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n            QImage<span class=\\"token punctuation\\">.</span>Format<span class=\\"token punctuation\\">.</span>Format_BGR888<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token punctuation\\">)</span>\\n        self<span class=\\"token punctuation\\">.</span>_image_label<span class=\\"token punctuation\\">.</span>setPixmap<span class=\\"token punctuation\\">(</span>QPixmap<span class=\\"token punctuation\\">.</span>fromImage<span class=\\"token punctuation\\">(</span>image<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">update_frame</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"更新帧\\"\\"\\"</span>\\n        ret<span class=\\"token punctuation\\">,</span> frame <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>_video<span class=\\"token punctuation\\">.</span>read<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">if</span> ret<span class=\\"token punctuation\\">:</span>\\n            self<span class=\\"token punctuation\\">.</span>dispaly_frame<span class=\\"token punctuation\\">(</span>frame<span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token keyword\\">if</span> __name__ <span class=\\"token operator\\">==</span> <span class=\\"token string\\">\\"__main__\\"</span><span class=\\"token punctuation\\">:</span>\\n    app <span class=\\"token operator\\">=</span> QApplication<span class=\\"token punctuation\\">(</span>sys<span class=\\"token punctuation\\">.</span>argv<span class=\\"token punctuation\\">)</span>\\n    window <span class=\\"token operator\\">=</span> MainWindow<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    window<span class=\\"token punctuation\\">.</span>show<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    sys<span class=\\"token punctuation\\">.</span>exit<span class=\\"token punctuation\\">(</span>app<span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">exec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</code></pre></div>","autoDesc":true}');export{b as comp,g as data};
