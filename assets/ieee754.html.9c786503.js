import{m as v,r as u,V as y,W as h,$ as b,X as a,a2 as c,a3 as i,Z as x,a1 as w,Y as d,a0 as g,z as V,_ as B}from"./framework.5ee3d720.js";const E=a("p",null,"IEEE 754 浮点数的交互式演示。",-1),N=a("h1",{id:"ieee-754-浮点数交互式演示",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#ieee-754-浮点数交互式演示","aria-hidden":"true"},"#"),d(" IEEE 754 浮点数交互式演示")],-1),U={class:"my-input"},z=a("label",{for:"input-text"},"输入值",-1),D=a("label",{for:"input-bin"},"二进制表示",-1),C=a("label",{for:"input-hex"},"十六进制表示",-1),S=a("label",{for:"input-real"},"原始值",-1),A=g(`<h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h2><p>使用 ES6 新特性 <code>ArrayBuffer</code> 和 <code>DataView</code> 来读取和设置二进制数组：</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> float32_to_uint32 <span class="token operator">=</span> <span class="token punctuation">(</span>f<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataView</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
  view<span class="token punctuation">.</span><span class="token function">setFloat32</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> f<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> view<span class="token punctuation">.</span><span class="token function">getUint32</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>点击在 GitHub 上编辑此页来查看源代码。</p>`,4),F=v({__name:"ieee754.html",setup(I){const r=u(""),o=u(""),p=u(""),l=u(0),f=e=>{const n=new ArrayBuffer(4),t=new DataView(n);return t.setFloat32(0,e,!0),t.getUint32(0,!0)},k=(e,n=32)=>{const t=e.toString(16);return"0".repeat(n/4-t.length)+t},m=(e,n=32)=>{const t=e.toString(2);return"0".repeat(n-t.length)+t},_=()=>{const e=parseFloat(r.value);if(isNaN(e)){o.value="",p.value="",l.value=0;return}const n=f(e);o.value=m(n),p.value=k(n),l.value=e};return(e,n)=>{const t=V("Badge");return y(),h("div",null,[E,b(" more "),N,a("div",U,[z,c(a("input",{type:"text",id:"input-text",autocomplete:"off",style:{"font-family":"var(--font-family-code)","font-size":"1rem"},onInput:_,"onUpdate:modelValue":n[0]||(n[0]=s=>r.value=s),placeholder:"输入浮点数"},null,544),[[i,r.value]]),a("p",null,[D,c(a("input",{type:"text",id:"input-bin",autocomplete:"off",readonly:"",style:{"font-family":"var(--font-family-code)","font-size":"1rem"},"onUpdate:modelValue":n[1]||(n[1]=s=>o.value=s),placeholder:"二进制"},null,512),[[i,o.value]])]),a("p",null,[C,c(a("input",{type:"text",id:"input-hex",autocomplete:"off",readonly:"",style:{"font-family":"var(--font-family-code)","font-size":"1rem"},"onUpdate:modelValue":n[2]||(n[2]=s=>p.value=s),placeholder:"十六进制"},null,512),[[i,p.value]])]),a("p",null,[S,c(a("input",{type:"text",id:"input-real",autocomplete:"off",readonly:"",style:{"font-family":"var(--font-family-code)","font-size":"1rem"},"onUpdate:modelValue":n[3]||(n[3]=s=>l.value=s),placeholder:"原始值"},null,512),[[i,l.value]])])]),a("p",null,[x(t,{type:"danger",vertical:"middle"},{default:w(()=>[d("TODO")]),_:1}),d(" 需要输入二进制和十六进制，并友好显示二进制表示。")]),A])}}}),O=B(F,[["__file","ieee754.html.vue"]]);export{O as default};
