import{_ as p,X as o,Y as c,Z as l,a0 as n,a1 as s,$ as t,a3 as e,C as i}from"./framework-bdf4df03.js";const u={},r=n("p",null,[s("使用 VuePress 和 "),n("code",null,"vuepress-theme-hope"),s(" 构建个人博客的配置指南。")],-1),d=e('<h1 id="博客配置指南" tabindex="-1"><a class="header-anchor" href="#博客配置指南" aria-hidden="true">#</a> 博客配置指南</h1><h2 id="基础配置" tabindex="-1"><a class="header-anchor" href="#基础配置" aria-hidden="true">#</a> 基础配置</h2><p>配置项目：</p><ul><li><code>src/.vuepress/config.ts</code> 配置</li><li><code>src/README.md</code> 主页配置</li><li><code>src/.vuepress/navbar/</code> 导航栏配置</li><li><code>src/.vuepress/sidebar/</code> 侧边栏配置</li><li><code>src/.vuepress/style/</code> 样式配置</li><li><code>src/intro.md</code> 个性化主页配置</li></ul><div class="hint-container tip"><p class="hint-container-title">重要功能</p><p>当前的 <em><strong>在 GitHub 上编辑</strong></em> 功能不能自动配置，其 <code>config.ts</code> 配置项为 <code>docsDir: &#39;docs&#39;</code>，但是默认创建文件夹为 <code>src/</code>，所以需要将 <code>&#39;docs&#39;</code> 修改为 <code>&#39;src&#39;</code>。</p></div><h2 id="页面结构" tabindex="-1"><a class="header-anchor" href="#页面结构" aria-hidden="true">#</a> 页面结构</h2><p>页面通常包含下面的部分：</p>',7),k={href:"https://vuepress-theme-hope.github.io/v2/zh/guide/layout/breadcrumb.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://vuepress-theme-hope.github.io/v2/zh/guide/feature/page-info.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://vuepress-theme-hope.github.io/v2/zh/guide/layout/page.html#%E6%A0%87%E9%A2%98%E5%88%97%E8%A1%A8",target:"_blank",rel:"noopener noreferrer"},m={href:"https://vuepress-theme-hope.github.io/v2/guide/feature/meta.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://vuepress-theme-hope.github.io/v2/zh/guide/feature/comment.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://vuepress-theme-hope.github.io/v2/zh/guide/layout/navbar.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://vuepress-theme-hope.github.io/v2/zh/guide/layout/sidebar.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://vuepress-theme-hope.github.io/v2/zh/guide/layout/footer.html",target:"_blank",rel:"noopener noreferrer"},y=n("li",null,"返回顶部按钮",-1),C=e(`<p>这些都可以通过主题配置 <code>config.ts</code> 和页面 Frontmatter 自定义它们。</p><h2 id="将一篇-markdown-文章视为-vue-sfc" tabindex="-1"><a class="header-anchor" href="#将一篇-markdown-文章视为-vue-sfc" aria-hidden="true">#</a> 将一篇 MarkDown 文章视为 Vue SFC</h2><p>每一个 MarkDown 文章都会被编译为 Vue SFC（单文件组件），因此可以借助 TypeScript 直接编写动态网页。</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>---
title: 测试
date: 2023-01-03
---

_你好， {{ msg }}_

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RedDiv</span><span class="token punctuation">&gt;</span></span>

_当前计数为： {{ count }}_

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RedDiv</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>count++<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点我！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> h<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">RedDiv</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>
  <span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&#39;red-div&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  ctx<span class="token punctuation">.</span>slots<span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token string">&#39;Markdown 中的 Vue&#39;</span>
<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">.red-div</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自定义组件" tabindex="-1"><a class="header-anchor" href="#自定义组件" aria-hidden="true">#</a> 自定义组件</h2>`,5),x={href:"https://v2.vuepress.vuejs.org/zh/advanced/cookbook/usage-of-client-config.html",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,".vuepress/client.ts",-1),w=e(`<div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/client&#39;</span>
<span class="token keyword">import</span> MyComponent <span class="token keyword">from</span> <span class="token string">&#39;./components/MyComponent.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">{</span> app <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;MyComponent&#39;</span><span class="token punctuation">,</span> MyComponent<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>新建 <code>.vuepress/components/MyComponent.vue</code> 组件：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> props <span class="token operator">=</span> defineProps<span class="token operator">&lt;</span><span class="token punctuation">{</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> string
  <span class="token literal-property property">url</span><span class="token operator">:</span> string
  <span class="token literal-property property">content</span><span class="token operator">:</span> string
<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>MyComponent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ props.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ props.url }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ props.content }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">h2</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VuePress2 默认包含 SCSS 依赖，如果需要 Less 需要自行安装引入。</p><p>这样，此组件就会被全局导入，在任意文章下使用 <code>MyComponent</code> 组件即可：</p><div class="language-vue" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span>
  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://blog.alexsun.top/<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Hello VuePress!<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MyComponent</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,6);function M(V,E){const a=i("ExternalLinkIcon");return o(),c("div",null,[r,l(" more "),d,n("ul",null,[n("li",null,[n("a",k,[s("路径导航"),t(a)])]),n("li",null,[n("a",v,[s("标题和页面信息"),t(a)])]),n("li",null,[n("a",g,[s("TOC (文章标题列表)"),t(a)])]),n("li",null,[n("a",m,[s("贡献者、更新时间等页面元信息"),t(a)])]),n("li",null,[n("a",h,[s("评论"),t(a)])]),n("li",null,[n("a",b,[s("导航栏"),t(a)])]),n("li",null,[n("a",f,[s("侧边栏"),t(a)])]),n("li",null,[n("a",_,[s("页脚"),t(a)])]),y]),C,n("p",null,[s("VuePress2 支持自定义组件，这依赖 "),n("a",x,[s("客户端配置"),t(a)]),s(" 实现，新建 "),q,s(" 开始配置：")]),w])}const D=p(u,[["render",M],["__file","configure.html.vue"]]);export{D as default};
