import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as a,c as l,b as e,a as o,w as d,e as s,d as c}from"./app-DhX54nll.js";const p={},r=e("h1",{id:"2-pyside6-快速入门",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#2-pyside6-快速入门"},[e("span",null,"2. PySide6 快速入门")])],-1),Q={class:"table-of-contents"},u=s(`<h2 id="21-了解各种模块" tabindex="-1"><a class="header-anchor" href="#21-了解各种模块"><span>2.1 了解各种模块</span></a></h2><p>下面了解 PySide6 各种模块的功能<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>，这些功能通常在各种不同的 Qt 发行版（如 PySide6 或 PyQt 中）通用。</p><ul><li><code>QtWidgets</code> 是窗口模块，提供窗口类和窗口上的各种控件（按钮、菜单、输入框、列表框等）类。</li><li><code>QtCore</code> 是核心模块，是其他模块的应用基础，包括五大模块：元对象系统、属性系统、对象模型、对象树、信号与槽。<code>QtCore</code> 模块涵盖了 PySide 核心的非 GUI 功能，此模块被用于处理程序中涉及的时间、文件、目录、数据类型、文本流、链接、MIME、线程或进程等对象。</li><li><code>QtGui</code> 模块涵盖多种基本图形功能的类，包括事件处理、2D 图形、基本的图像和字体文本等。</li><li><code>QtSql</code> 模块提供了常用关系型数据库的接口和数据库模型，方便读写数据库中的数据。</li><li><code>QtMultimedia</code> 模块包含处理多媒体事件的类库，通过调用 API 接口访问摄像头、语音设备，播放音频和视频，录制音频和视频及拍照等。</li><li><code>QtChart</code> 和 <code>QtDataVisualization</code> 模块用于数据可视化，可以绘制二维和三维数据图表。</li><li><code>QtPrintSupport</code> 模块提供打印支持，能识别系统中安装的打印机并进行打印，可以对打印参数进行设置，提供打印对话框和打印预览对话框。</li><li><code>QtBluetooth</code> 模块包含了处理蓝牙的类库，它的功能包括扫描设备、连接、交互等。</li><li><code>QtNetwork</code> 模块包含用于网络编程的类库，这组类库通过提供便捷的 TCP/IP 及 UDP 的 C/S 代码集合，使得网络编程更容易。</li><li><code>QtWebEngine</code> 和 <code>QtWebEngineWidgets</code> 模块借助开源的 Chromium 浏览器，在应用程序中嵌入 Web 浏览功能。</li><li><code>QtXml</code> 模块包含了用于处理 XML 的类库，提供实现 SAX 和 DOM API 的方法。</li><li><code>QtOpenGL</code>、<code>QtOpenGLFunctions</code> 和 <code>QtOpenGLWidgets</code> 模块使用 OpenGL 库来渲染 3D 和 2D 图形，该模块使得 <code>QtGUI</code> 库和 OpenGL 库无缝集成。</li><li><code>QtDesigner</code> 模块可以为 <code>QtDesigner</code> 创建自定义控件。</li><li><code>QtSvg</code> 模块为显示矢量图形文件的内容提供了函数。</li><li><code>QtTest</code> 模块包含了可以通过单元测试调试 PySide 应用程序的功能。</li><li><code>QtStateMachine</code> 模块可以创建和执行状态图。</li><li><code>QtHelp</code> 模块可以为应用程序集成在线帮助。</li><li><code>QtConcurrent</code> 模块支持多线程程序。</li><li><code>Qt3DCore</code>、<code>Qt3DInput</code>、<code>Qt3DRender</code>、<code>Qt3DAnimation</code>、<code>Qt3DLogic</code>、<code>Qt3DExtras</code> 等模块提供三维渲染、三维实时动画。</li></ul><h2 id="22-各种工具" tabindex="-1"><a class="header-anchor" href="#22-各种工具"><span>2.2 各种工具</span></a></h2><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td><code>pyside6-genpyi</code></td><td>用于为所有 PySide 模块生成 <code>.pyi</code> 文件</td></tr><tr><td><code>pyside6-rcc</code></td><td>Qt 资源编译工具</td></tr><tr><td><code>pyside6-uic</code></td><td>用于将 <code>.ui</code> 文件转换成 <code>.py</code> 文件</td></tr><tr><td><code>pyside6-designer</code></td><td>打开 Qt Designer</td></tr></tbody></table><h2 id="23-深入了解-qapplication" tabindex="-1"><a class="header-anchor" href="#23-深入了解-qapplication"><span>2.3 深入了解 QApplication</span></a></h2><p><code>PySide6.QtWidgets.QApplication</code> 类用于管理 GUI 应用程序的控制流和主要设置。</p><p><code>QApplication</code> 提供了一些基于 <code>QWidget</code> 的应用程序所需的功能；用于处理特定小部件的初始化、结束。对于任何使用 Qt 的 GUI 应用程序，无论是否存在窗口，都有一个 <code>QApplication</code> 对象。</p><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> sys
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QApplication

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><table><thead><tr><th>方法名</th><th>描述</th></tr></thead><tbody><tr><td><code>exec()</code></td><td>需要调用这个函数来启动事件处理</td></tr><tr><td><code>aboutQt()</code></td><td>显示一个关于 Qt 的消息框</td></tr><tr><td><code>beep()</code></td><td>播放系统通知声音</td></tr><tr><td><code>allWidgets()</code></td><td>返回一个包含所有小部件的列表</td></tr><tr><td><code>style()</code></td><td>返回程序当前使用的 <code>Style</code> 对象</td></tr><tr><td><code>setStyle()</code></td><td>设置GUI的样式</td></tr><tr><td><code>widgetAt()</code></td><td>获取屏幕 <code>(x, y)</code> 位置处的 Qt 小部件对象</td></tr></tbody></table><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>李增刚、沈丽，<em>Qt for Python PySide6 GUI 界面开发详解与实例</em>，清华大学出版社（2022.10） <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li></ol></section>`,12);function h(y,m){const t=i("router-link");return a(),l("div",null,[r,e("nav",Q,[e("ul",null,[e("li",null,[o(t,{to:"#21-了解各种模块"},{default:d(()=>[c("2.1 了解各种模块")]),_:1})]),e("li",null,[o(t,{to:"#22-各种工具"},{default:d(()=>[c("2.2 各种工具")]),_:1})]),e("li",null,[o(t,{to:"#23-深入了解-qapplication"},{default:d(()=>[c("2.3 深入了解 QApplication")]),_:1})])])]),u])}const P=n(p,[["render",h],["__file","index.html.vue"]]),S=JSON.parse('{"path":"/posts/python/packages/pyside6/chapter02/","title":"2. PySide6 快速入门","lang":"zh-CN","frontmatter":{"description":"2. PySide6 快速入门 2.1 了解各种模块 下面了解 PySide6 各种模块的功能[1]，这些功能通常在各种不同的 Qt 发行版（如 PySide6 或 PyQt 中）通用。 QtWidgets 是窗口模块，提供窗口类和窗口上的各种控件（按钮、菜单、输入框、列表框等）类。 QtCore 是核心模块，是其他模块的应用基础，包括五大模块：元对象...","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/posts/python/packages/pyside6/chapter02/"}],["meta",{"property":"og:site_name","content":"鸭梨"}],["meta",{"property":"og:title","content":"2. PySide6 快速入门"}],["meta",{"property":"og:description","content":"2. PySide6 快速入门 2.1 了解各种模块 下面了解 PySide6 各种模块的功能[1]，这些功能通常在各种不同的 Qt 发行版（如 PySide6 或 PyQt 中）通用。 QtWidgets 是窗口模块，提供窗口类和窗口上的各种控件（按钮、菜单、输入框、列表框等）类。 QtCore 是核心模块，是其他模块的应用基础，包括五大模块：元对象..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-27T04:16:18.000Z"}],["meta",{"property":"article:author","content":"Alex Sun"}],["meta",{"property":"article:modified_time","content":"2024-05-27T04:16:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2. PySide6 快速入门\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-27T04:16:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Alex Sun\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"2.1 了解各种模块","slug":"21-了解各种模块","link":"#21-了解各种模块","children":[]},{"level":2,"title":"2.2 各种工具","slug":"22-各种工具","link":"#22-各种工具","children":[]},{"level":2,"title":"2.3 深入了解 QApplication","slug":"23-深入了解-qapplication","link":"#23-深入了解-qapplication","children":[]}],"git":{"createdTime":1716783378000,"updatedTime":1716783378000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":3.07,"words":921},"filePathRelative":"posts/python/packages/pyside6/chapter02/index.md","localizedDate":"2024年5月27日","excerpt":"\\n\\n<h2>2.1 了解各种模块</h2>\\n<p>下面了解 PySide6 各种模块的功能<sup class=\\"footnote-ref\\"><a href=\\"#footnote1\\">[1]</a><a class=\\"footnote-anchor\\" id=\\"footnote-ref1\\"></a></sup><a class=\\"footnote-anchor\\" id=\\"footnote-ref1\\">，这些功能通常在各种不同的 Qt 发行版（如 PySide6 或 PyQt 中）通用。</a></p><a class=\\"footnote-anchor\\" id=\\"footnote-ref1\\">\\n<ul>\\n<li><code>QtWidgets</code> 是窗口模块，提供窗口类和窗口上的各种控件（按钮、菜单、输入框、列表框等）类。</li>\\n<li><code>QtCore</code> 是核心模块，是其他模块的应用基础，包括五大模块：元对象系统、属性系统、对象模型、对象树、信号与槽。<code>QtCore</code> 模块涵盖了 PySide 核心的非 GUI 功能，此模块被用于处理程序中涉及的时间、文件、目录、数据类型、文本流、链接、MIME、线程或进程等对象。</li>\\n<li><code>QtGui</code> 模块涵盖多种基本图形功能的类，包括事件处理、2D 图形、基本的图像和字体文本等。</li>\\n<li><code>QtSql</code> 模块提供了常用关系型数据库的接口和数据库模型，方便读写数据库中的数据。</li>\\n<li><code>QtMultimedia</code> 模块包含处理多媒体事件的类库，通过调用 API 接口访问摄像头、语音设备，播放音频和视频，录制音频和视频及拍照等。</li>\\n<li><code>QtChart</code> 和 <code>QtDataVisualization</code> 模块用于数据可视化，可以绘制二维和三维数据图表。</li>\\n<li><code>QtPrintSupport</code> 模块提供打印支持，能识别系统中安装的打印机并进行打印，可以对打印参数进行设置，提供打印对话框和打印预览对话框。</li>\\n<li><code>QtBluetooth</code> 模块包含了处理蓝牙的类库，它的功能包括扫描设备、连接、交互等。</li>\\n<li><code>QtNetwork</code> 模块包含用于网络编程的类库，这组类库通过提供便捷的 TCP/IP 及 UDP 的 C/S 代码集合，使得网络编程更容易。</li>\\n<li><code>QtWebEngine</code> 和 <code>QtWebEngineWidgets</code> 模块借助开源的 Chromium 浏览器，在应用程序中嵌入 Web 浏览功能。</li>\\n<li><code>QtXml</code> 模块包含了用于处理 XML 的类库，提供实现 SAX 和 DOM API 的方法。</li>\\n<li><code>QtOpenGL</code>、<code>QtOpenGLFunctions</code> 和 <code>QtOpenGLWidgets</code> 模块使用 OpenGL 库来渲染 3D 和 2D 图形，该模块使得 <code>QtGUI</code> 库和 OpenGL 库无缝集成。</li>\\n<li><code>QtDesigner</code> 模块可以为 <code>QtDesigner</code> 创建自定义控件。</li>\\n<li><code>QtSvg</code> 模块为显示矢量图形文件的内容提供了函数。</li>\\n<li><code>QtTest</code> 模块包含了可以通过单元测试调试 PySide 应用程序的功能。</li>\\n<li><code>QtStateMachine</code> 模块可以创建和执行状态图。</li>\\n<li><code>QtHelp</code> 模块可以为应用程序集成在线帮助。</li>\\n<li><code>QtConcurrent</code> 模块支持多线程程序。</li>\\n<li><code>Qt3DCore</code>、<code>Qt3DInput</code>、<code>Qt3DRender</code>、<code>Qt3DAnimation</code>、<code>Qt3DLogic</code>、<code>Qt3DExtras</code> 等模块提供三维渲染、三维实时动画。</li>\\n</ul>\\n</a>","autoDesc":true}');export{P as comp,S as data};
