import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,b as n,a as s,w as t,e as i,d as e}from"./app-DhX54nll.js";const r={},u=n("h1",{id:"python-语言技巧",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python-语言技巧"},[n("span",null,"Python 语言技巧")])],-1),k={class:"table-of-contents"},d=i(`<h2 id="1-列表推导" tabindex="-1"><a class="header-anchor" href="#1-列表推导"><span>1. 列表推导</span></a></h2><h3 id="11-从字典中提取子集" tabindex="-1"><a class="header-anchor" href="#11-从字典中提取子集"><span>1.1 从字典中提取子集</span></a></h3><div class="hint-container info"><p class="hint-container-title">引用</p><p>引用自 <em>Python Cookbook</em>：<a href="https://python3-cookbook.readthedocs.io/zh_CN/latest/c01/p17_extract_subset_of_dict.html" target="_blank" rel="noopener noreferrer">从字典中提取子集</a>。</p></div><p>你想构造一个字典，它是另外一个字典的子集，最简单的方式是使用字典推导：</p><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code>prices <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;ACME&#39;</span><span class="token punctuation">:</span> <span class="token number">45.23</span><span class="token punctuation">,</span>
    <span class="token string">&#39;AAPL&#39;</span><span class="token punctuation">:</span> <span class="token number">612.78</span><span class="token punctuation">,</span>
    <span class="token string">&#39;IBM&#39;</span><span class="token punctuation">:</span> <span class="token number">205.55</span><span class="token punctuation">,</span>
    <span class="token string">&#39;HPQ&#39;</span><span class="token punctuation">:</span> <span class="token number">37.20</span><span class="token punctuation">,</span>
    <span class="token string">&#39;FB&#39;</span><span class="token punctuation">:</span> <span class="token number">10.75</span>
<span class="token punctuation">}</span>
<span class="token comment"># Make a dictionary of all prices over 200</span>
p1 <span class="token operator">=</span> <span class="token punctuation">{</span>key<span class="token punctuation">:</span> value <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> prices<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> value <span class="token operator">&gt;</span> <span class="token number">200</span><span class="token punctuation">}</span>

<span class="token comment"># Make a dictionary of tech stocks</span>
tech_names <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;AAPL&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;IBM&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;HPQ&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;MSFT&#39;</span><span class="token punctuation">}</span>
p2 <span class="token operator">=</span> <span class="token punctuation">{</span>key<span class="token punctuation">:</span> value <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> prices<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> key <span class="token keyword">in</span> tech_names<span class="token punctuation">}</span>
</code></pre></div><p>大多数情况下字典推导能做到的，通过创建一个元组序列然后把它传给 <code>dict()</code> 函数也能实现：</p><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code>p1 <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> prices<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> value <span class="token operator">&gt;</span> <span class="token number">200</span><span class="token punctuation">)</span>
</code></pre></div><p>但是，字典推导方式表意更清晰，并且实际上也会运行的更快些（在这个例子中，实际测试几乎比 <code>dict()</code> 函数方式快整整一倍）</p><p>有时候完成同一件事会有多种方式。比如，第二个例子程序也可以像这样重写：</p><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># Make a dictionary of tech stocks</span>
tech_names <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&#39;AAPL&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;IBM&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;HPQ&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;MSFT&#39;</span> <span class="token punctuation">}</span>
p2 <span class="token operator">=</span> <span class="token punctuation">{</span> key<span class="token punctuation">:</span> prices<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token keyword">for</span> key <span class="token keyword">in</span> prices<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> tech_names <span class="token punctuation">}</span>
</code></pre></div><p>但是，运行时间测试结果显示这种方案大概比第一种方案慢 1.6 倍。</p>`,11);function h(y,m){const a=o("router-link");return c(),l("div",null,[u,n("nav",k,[n("ul",null,[n("li",null,[s(a,{to:"#1-列表推导"},{default:t(()=>[e("1. 列表推导")]),_:1}),n("ul",null,[n("li",null,[s(a,{to:"#11-从字典中提取子集"},{default:t(()=>[e("1.1 从字典中提取子集")]),_:1})])])])])]),d])}const f=p(r,[["render",h],["__file","tricks.html.vue"]]),b=JSON.parse('{"path":"/posts/python/basic/lang/tricks.html","title":"Python 语言技巧","lang":"zh-CN","frontmatter":{"description":"Python 语言技巧 1. 列表推导 1.1 从字典中提取子集 引用 引用自 Python Cookbook：从字典中提取子集。 你想构造一个字典，它是另外一个字典的子集，最简单的方式是使用字典推导： 大多数情况下字典推导能做到的，通过创建一个元组序列然后把它传给 dict() 函数也能实现： 但是，字典推导方式表意更清晰，并且实际上也会运行的更快些...","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/posts/python/basic/lang/tricks.html"}],["meta",{"property":"og:site_name","content":"鸭梨"}],["meta",{"property":"og:title","content":"Python 语言技巧"}],["meta",{"property":"og:description","content":"Python 语言技巧 1. 列表推导 1.1 从字典中提取子集 引用 引用自 Python Cookbook：从字典中提取子集。 你想构造一个字典，它是另外一个字典的子集，最简单的方式是使用字典推导： 大多数情况下字典推导能做到的，通过创建一个元组序列然后把它传给 dict() 函数也能实现： 但是，字典推导方式表意更清晰，并且实际上也会运行的更快些..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-27T04:16:18.000Z"}],["meta",{"property":"article:author","content":"Alex Sun"}],["meta",{"property":"article:modified_time","content":"2024-05-27T04:16:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python 语言技巧\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-27T04:16:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Alex Sun\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"1. 列表推导","slug":"1-列表推导","link":"#1-列表推导","children":[{"level":3,"title":"1.1 从字典中提取子集","slug":"11-从字典中提取子集","link":"#11-从字典中提取子集","children":[]}]}],"git":{"createdTime":1716783378000,"updatedTime":1716783378000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":1.01,"words":304},"filePathRelative":"posts/python/basic/lang/tricks.md","localizedDate":"2024年5月27日","excerpt":"\\n\\n<h2>1. 列表推导</h2>\\n<h3>1.1 从字典中提取子集</h3>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">引用</p>\\n<p>引用自 <em>Python Cookbook</em>：<a href=\\"https://python3-cookbook.readthedocs.io/zh_CN/latest/c01/p17_extract_subset_of_dict.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">从字典中提取子集</a>。</p>\\n</div>","autoDesc":true}');export{f as comp,b as data};
