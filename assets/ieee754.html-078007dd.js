import{g as h,h as u,o as k,c as m,n as i,v as d,d as e,F as g,u as I,x as S,r as V,a as B,b as f,e as o,f as F}from"./app-0718dc96.js";import{_ as v}from"./plugin-vue_export-helper-c27b6911.js";const _=p=>(I("data-v-eebeec40"),p=p(),S(),p),N=_(()=>e("label",{for:"input-text"},"输入值",-1)),U=_(()=>e("label",{for:"input-bin"},"二进制表示",-1)),C=_(()=>e("label",{for:"input-hex"},"十六进制表示",-1)),D=_(()=>e("label",{for:"input-real"},"原始值",-1)),A=h({__name:"IEEE754",setup(p){const r=u(""),l=u(""),s=u(""),c=u(0),E=a=>{const n=new ArrayBuffer(4),t=new DataView(n);return t.setFloat32(0,a,!0),t.getUint32(0,!0)},b=a=>{const n=new ArrayBuffer(4),t=new DataView(n);return t.setUint32(0,a,!0),t.getFloat32(0,!0)},y=(a,n=32)=>{const t=a.toString(16);return"0".repeat(n/4-t.length)+t},w=(a,n=32)=>{const t=a.toString(2);return"0".repeat(n-t.length)+t},x=()=>{const a=parseFloat(r.value);if(isNaN(a)){l.value="",s.value="",c.value=0;return}const n=E(a);l.value=w(n),s.value=y(n),c.value=b(n)};return(a,n)=>(k(),m(g,null,[N,i(e("input",{type:"text",id:"input-text",autocomplete:"off",style:{"font-family":"var(--font-family-code)"},onInput:x,"onUpdate:modelValue":n[0]||(n[0]=t=>r.value=t),placeholder:"输入浮点数"},null,544),[[d,r.value]]),U,i(e("input",{type:"text",id:"input-bin",autocomplete:"off",readonly:"",style:{"font-family":"var(--font-family-code)"},"onUpdate:modelValue":n[1]||(n[1]=t=>l.value=t),placeholder:"二进制"},null,512),[[d,l.value]]),C,i(e("input",{type:"text",id:"input-hex",autocomplete:"off",readonly:"",style:{"font-family":"var(--font-family-code)"},"onUpdate:modelValue":n[2]||(n[2]=t=>s.value=t),placeholder:"十六进制"},null,512),[[d,s.value]]),D,i(e("input",{type:"text",id:"input-real",autocomplete:"off",readonly:"",style:{"font-family":"var(--font-family-code)"},"onUpdate:modelValue":n[3]||(n[3]=t=>c.value=t),placeholder:"原始值"},null,512),[[d,c.value]])],64))}});const $=v(A,[["__scopeId","data-v-eebeec40"],["__file","IEEE754.vue"]]),X=e("p",null,"IEEE 754 浮点数的交互式演示。",-1),Z=e("h2",{id:"_1-演示",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-演示","aria-hidden":"true"},"#"),o(" 1. 演示")],-1),J=F(`<h2 id="_2-原理" tabindex="-1"><a class="header-anchor" href="#_2-原理" aria-hidden="true">#</a> 2. 原理</h2><div class="hint-container tip"><p class="hint-container-title">解释</p><p>具体显示的结果取决于你的计算机储存方式和浮点数实现，考虑到现代计算机几乎 100% 地采用了 IEEE 754，并使用小端存储数据，所以这可以保证 100% 是正确的。除非你的机器 / JavaScript 实现使用大端存储，这样你看到的结果也是大端的。</p></div><p>使用 ES6 新特性 <code>ArrayBuffer</code> 和 <code>DataView</code> 来读取和设置二进制数组：</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 将浮点数转换为 uint32 类型</span>
<span class="token keyword">const</span> float32_to_uint32 <span class="token operator">=</span> <span class="token punctuation">(</span>f<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataView</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span>
  view<span class="token punctuation">.</span><span class="token function">setFloat32</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> f<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> view<span class="token punctuation">.</span><span class="token function">getUint32</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div>`,4),L={href:"https://github.com/Sun-ZhenXing/Sun-ZhenXing.github.io/tree/main/src/.vuepress/components/IEEE754.vue",target:"_blank",rel:"noopener noreferrer"},T=e("h2",{id:"_3-推荐项目",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-推荐项目","aria-hidden":"true"},"#"),o(" 3. 推荐项目")],-1),M={href:"https://github.com/Sun-ZhenXing/IEEE754",target:"_blank",rel:"noopener noreferrer"},P={href:"https://www.h-schmidt.net/FloatConverter/IEEE754.html",target:"_blank",rel:"noopener noreferrer"},j=h({__name:"ieee754.html",setup(p){return(r,l)=>{const s=V("ExternalLinkIcon");return k(),m("div",null,[X,B(" more "),Z,f($),J,e("p",null,[o("可参考 "),e("a",L,[o("本页组件实现代码"),f(s)]),o(" 来了解更多。")]),T,e("ol",null,[e("li",null,[e("a",M,[o("我使用 PySide6 构建的 IEEE 754 演示"),f(s)]),o("，效果好于当前页面")]),e("li",null,[e("a",P,[o("IEEE 754 Converter (JavaScript)"),f(s)])])])])}}}),G=v(j,[["__file","ieee754.html.vue"]]);export{G as default};
