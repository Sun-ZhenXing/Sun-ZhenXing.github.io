import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as i,c as u,b as n,a,w as t,d as s,e as l}from"./app-DhX54nll.js";const r={},k=n("h1",{id:"创建异步子进程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#创建异步子进程"},[n("span",null,"创建异步子进程")])],-1),d={class:"table-of-contents"},y=l(`<h2 id="1-发起异步进程" tabindex="-1"><a class="header-anchor" href="#1-发起异步进程"><span>1. 发起异步进程</span></a></h2><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>cmd<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    proc <span class="token operator">=</span> <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>create_subprocess_shell<span class="token punctuation">(</span>
        cmd<span class="token punctuation">,</span>
        stdout<span class="token operator">=</span>asyncio<span class="token punctuation">.</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>
        stderr<span class="token operator">=</span>asyncio<span class="token punctuation">.</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    stdout<span class="token punctuation">,</span> stderr <span class="token operator">=</span> <span class="token keyword">await</span> proc<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>cmd<span class="token conversion-option punctuation">!r</span><span class="token punctuation">}</span></span><span class="token string"> exited with </span><span class="token interpolation"><span class="token punctuation">{</span>proc<span class="token punctuation">.</span>returncode<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> stdout<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[stdout]\\n</span><span class="token interpolation"><span class="token punctuation">{</span>stdout<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> stderr<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[stderr]\\n</span><span class="token interpolation"><span class="token punctuation">{</span>stderr<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>run<span class="token punctuation">(</span><span class="token string">&quot;ls /&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="2-windows-下的限制" tabindex="-1"><a class="header-anchor" href="#2-windows-下的限制"><span>2. Windows 下的限制</span></a></h2>`,3),h=n("code",null,"ProactorEventLoop",-1),m=n("code",null,"ProactorEventLoop",-1);function g(w,_){const o=p("router-link"),e=p("Badge");return i(),u("div",null,[k,n("nav",d,[n("ul",null,[n("li",null,[a(o,{to:"#1-发起异步进程"},{default:t(()=>[s("1. 发起异步进程")]),_:1})]),n("li",null,[a(o,{to:"#2-windows-下的限制"},{default:t(()=>[s("2. Windows 下的限制")]),_:1})])])]),y,n("p",null,[a(e,{type:"danger",vertical:"inherit"},{default:t(()=>[s("TODO")]),_:1}),s(" Windows 只有 "),h,s(" 支持异步子进程，但是许多库都不支持 "),m,s("，所以 Windows 下的异步子进程支持不好。")])])}const v=c(r,[["render",g],["__file","subprocess.html.vue"]]),x=JSON.parse('{"path":"/posts/python/basic/asyncio/subprocess.html","title":"创建异步子进程","lang":"zh-CN","frontmatter":{"description":"创建异步子进程 1. 发起异步进程 2. Windows 下的限制 Windows 只有 ProactorEventLoop 支持异步子进程，但是许多库都不支持 ProactorEventLoop，所以 Windows 下的异步子进程支持不好。","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/posts/python/basic/asyncio/subprocess.html"}],["meta",{"property":"og:site_name","content":"鸭梨"}],["meta",{"property":"og:title","content":"创建异步子进程"}],["meta",{"property":"og:description","content":"创建异步子进程 1. 发起异步进程 2. Windows 下的限制 Windows 只有 ProactorEventLoop 支持异步子进程，但是许多库都不支持 ProactorEventLoop，所以 Windows 下的异步子进程支持不好。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-27T04:16:18.000Z"}],["meta",{"property":"article:author","content":"Alex Sun"}],["meta",{"property":"article:modified_time","content":"2024-05-27T04:16:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"创建异步子进程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-27T04:16:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Alex Sun\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"1. 发起异步进程","slug":"1-发起异步进程","link":"#1-发起异步进程","children":[]},{"level":2,"title":"2. Windows 下的限制","slug":"2-windows-下的限制","link":"#2-windows-下的限制","children":[]}],"git":{"createdTime":1716783378000,"updatedTime":1716783378000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":0.34,"words":103},"filePathRelative":"posts/python/basic/asyncio/subprocess.md","localizedDate":"2024年5月27日","excerpt":"\\n\\n<h2>1. 发起异步进程</h2>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> asyncio\\n\\n<span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span>cmd<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">str</span> <span class=\\"token operator\\">|</span> <span class=\\"token builtin\\">bytes</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    proc <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> asyncio<span class=\\"token punctuation\\">.</span>create_subprocess_shell<span class=\\"token punctuation\\">(</span>\\n        cmd<span class=\\"token punctuation\\">,</span>\\n        stdout<span class=\\"token operator\\">=</span>asyncio<span class=\\"token punctuation\\">.</span>subprocess<span class=\\"token punctuation\\">.</span>PIPE<span class=\\"token punctuation\\">,</span>\\n        stderr<span class=\\"token operator\\">=</span>asyncio<span class=\\"token punctuation\\">.</span>subprocess<span class=\\"token punctuation\\">.</span>PIPE<span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">)</span>\\n    stdout<span class=\\"token punctuation\\">,</span> stderr <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> proc<span class=\\"token punctuation\\">.</span>communicate<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>cmd<span class=\\"token conversion-option punctuation\\">!r</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\"> exited with </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>proc<span class=\\"token punctuation\\">.</span>returncode<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> stdout<span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"[stdout]\\\\n</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>stdout<span class=\\"token punctuation\\">.</span>decode<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> stderr<span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"[stderr]\\\\n</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>stderr<span class=\\"token punctuation\\">.</span>decode<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n\\nasyncio<span class=\\"token punctuation\\">.</span>run<span class=\\"token punctuation\\">(</span>run<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"ls /\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</code></pre></div>","autoDesc":true}');export{v as comp,x as data};
