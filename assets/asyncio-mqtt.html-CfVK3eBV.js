import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as i,c as l,b as n,a,w as t,e as o,d as p}from"./app-DhX54nll.js";const u={},r=o('<h1 id="asyncio-mqtt---异步-mqtt-客户端" tabindex="-1"><a class="header-anchor" href="#asyncio-mqtt---异步-mqtt-客户端"><span>asyncio-mqtt - 异步 MQTT 客户端</span></a></h1><div class="no-link"><p><a href="https://github.com/sbtinstruments/asyncio-mqtt/blob/main/LICENSE" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/github/license/sbtinstruments/asyncio-mqtt" alt="alt" loading="lazy"></a><br><a href="https://pypi.org/project/asyncio-mqtt" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/pypi/v/asyncio-mqtt" alt="alt" loading="lazy"></a><br><a href="https://pypi.org/project/asyncio-mqtt" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/pypi/pyversions/asyncio-mqtt.svg" alt="alt" loading="lazy"></a><br><a href="https://pypi.org/project/asyncio-mqtt" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/pypi/dm/asyncio-mqtt" alt="alt" loading="lazy"></a><br><a href="https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/test.yml" target="_blank" rel="noopener noreferrer"><img src="https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/test.yml/badge.svg" alt="alt" loading="lazy"></a><br><a href="https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/docs.yml" target="_blank" rel="noopener noreferrer"><img src="https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/docs.yml/badge.svg" alt="alt" loading="lazy"></a><br><a href="https://codecov.io/gh/sbtinstruments/asyncio-mqtt" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/codecov/c/github/sbtinstruments/asyncio-mqtt" alt="alt" loading="lazy"></a><br><a href="https://results.pre-commit.ci/latest/github/sbtinstruments/asyncio-mqtt/main" target="_blank" rel="noopener noreferrer"><img src="https://results.pre-commit.ci/badge/github/sbtinstruments/asyncio-mqtt/main.svg" alt="alt" loading="lazy"></a><br><a href="https://github.com/sbtinstruments/asyncio-mqtt" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/typing-strict-green.svg" alt="alt" loading="lazy"></a><br><a href="https://github.com/sbtinstruments/asyncio-mqtt" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/code style-black-black" alt="alt" loading="lazy"></a><br><a href="https://github.com/charliermarsh/ruff" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v1.json" alt="alt" loading="lazy"></a></p></div>',2),k={class:"table-of-contents"},d=o(`<h2 id="1-项目简介" tabindex="-1"><a class="header-anchor" href="#1-项目简介"><span>1. 项目简介</span></a></h2><table><thead><tr><th>项目</th><th>信息</th></tr></thead><tbody><tr><td>项目地址</td><td><a href="https://pypi.org/project/asyncio-mqtt" target="_blank" rel="noopener noreferrer">PyPI</a> | <a href="https://github.com/sbtinstruments/asyncio-mqtt" target="_blank" rel="noopener noreferrer">GitHub</a></td></tr><tr><td>官方文档</td><td><a href="https://sbtinstruments.github.io/asyncio-mqtt" target="_blank" rel="noopener noreferrer">sbtinstruments.github.io</a></td></tr><tr><td>开源协议</td><td>BSD-3-Clause</td></tr><tr><td>Python 版本</td><td>Python 3.7 ~ 3.11</td></tr><tr><td>标签</td><td>asyncio</td></tr></tbody></table><p><code>asyncio-mqtt</code> 提供了基于 <a href="https://github.com/eclipse/paho.mqtt.python" target="_blank" rel="noopener noreferrer"><code>paho-mqtt</code></a> 的现代的、异步的接口。</p><ul><li>没有回调</li><li>没有更多的返回代码（使用 <code>MqttError</code> 就够了）</li><li>优雅的断开连接</li><li>与异步代码兼容</li><li>完全的类型提示</li><li>整个系统只有不到 900 行的代码。</li></ul><p><code>asyncio-mqtt</code> 安装后同样也会安装 <code>paho.mqtt</code>，部分配置可能用到 <code>paho.mqtt</code> 库中的内容。</p><p>安装：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> asyncio-mqtt
</code></pre></div><p>直接安装 GitHub 上的最新版本：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> git+https://github.com/sbtinstruments/asyncio-mqtt
</code></pre></div><div class="hint-container warning"><p class="hint-container-title">Windows 使用注意</p><p>从 Python 3.8 开始，<code>asyncio</code> 的默认事件循环是 <code>ProactorEventLoop</code>。该循环不支持 <code>asyncio-mqtt</code> 需要的 <code>add_reader</code> 方法。请切换到一个支持 <code>add_reader</code> 方法的事件循环，比如内置的 <code>SelectorEventLoop</code>。</p><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 修改为 Windows 的 &quot;Selector&quot; 事件循环</span>
asyncio<span class="token punctuation">.</span>set_event_loop_policy<span class="token punctuation">(</span>asyncio<span class="token punctuation">.</span>WindowsSelectorEventLoopPolicy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 正常使用即可</span>
asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div></div><h2 id="2-快速开始" tabindex="-1"><a class="header-anchor" href="#2-快速开始"><span>2. 快速开始</span></a></h2><p>发布：</p><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">with</span> Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
    <span class="token keyword">await</span> client<span class="token punctuation">.</span>publish<span class="token punctuation">(</span><span class="token string">&quot;humidity/outside&quot;</span><span class="token punctuation">,</span> payload<span class="token operator">=</span><span class="token number">0.38</span><span class="token punctuation">)</span>
</code></pre></div><p>订阅：</p><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">with</span> Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> client<span class="token punctuation">.</span>messages<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> messages<span class="token punctuation">:</span>
        <span class="token keyword">await</span> client<span class="token punctuation">.</span>subscribe<span class="token punctuation">(</span><span class="token string">&quot;humidity/#&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">async</span> <span class="token keyword">for</span> message <span class="token keyword">in</span> messages<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">)</span>
</code></pre></div><p><code>payload</code> 可以是 <code>int</code>、<code>float</code>、<code>str</code>、<code>bytes</code>、<code>bytearray</code> 和 <code>None</code>。</p><p>数字被默认转换为字符串，如果需要数字原始值，可以使用 <code>struct.pack()</code>。<code>None</code> 代表零长度负载。</p><h2 id="3-客户端配置" tabindex="-1"><a class="header-anchor" href="#3-客户端配置"><span>3. 客户端配置</span></a></h2><p>在初始化客户端时，可参考下面的配置，下面的值均为默认值。关于各个参数的更多信息，请看 <a href="https://github.com/eclipse/paho.mqtt.python" target="_blank" rel="noopener noreferrer">paho-mqtt 的文档</a>。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt
<span class="token keyword">import</span> paho<span class="token punctuation">.</span>mqtt <span class="token keyword">as</span> mqtt

aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span>
    hostname<span class="token operator">=</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">,</span>  <span class="token comment"># 唯一的必须参数</span>
    port<span class="token operator">=</span><span class="token number">1883</span><span class="token punctuation">,</span>
    username<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    password<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    logger<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    client_id<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    tls_context<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    tls_params<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    proxy<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    protocol<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    will<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    clean_session<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    transport<span class="token operator">=</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span>
    keepalive<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span>
    bind_address<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    bind_port<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>
    clean_start<span class="token operator">=</span>mqtt<span class="token punctuation">.</span>client<span class="token punctuation">.</span>MQTT_CLEAN_START_FIRST_ONLY<span class="token punctuation">,</span>
    properties<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    message_retry_set<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span>
    socket_options<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    max_concurrent_outgoing_calls<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    websocket_path<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    websocket_headers<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="4-最佳实战" tabindex="-1"><a class="header-anchor" href="#4-最佳实战"><span>4. 最佳实战</span></a></h2><h3 id="41-重新连接" tabindex="-1"><a class="header-anchor" href="#41-重新连接"><span>4.1 重新连接</span></a></h3><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    reconnect_interval <span class="token operator">=</span> <span class="token number">5</span>  <span class="token comment"># In seconds</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
                <span class="token keyword">async</span> <span class="token keyword">with</span> client<span class="token punctuation">.</span>messages<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> messages<span class="token punctuation">:</span>
                    <span class="token keyword">await</span> client<span class="token punctuation">.</span>subscribe<span class="token punctuation">(</span><span class="token string">&quot;humidity/#&quot;</span><span class="token punctuation">)</span>
                    <span class="token keyword">async</span> <span class="token keyword">for</span> message <span class="token keyword">in</span> messages<span class="token punctuation">:</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> aiomqtt<span class="token punctuation">.</span>MqttError <span class="token keyword">as</span> error<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Error &quot;</span><span class="token interpolation"><span class="token punctuation">{</span>error<span class="token punctuation">}</span></span><span class="token string">&quot;. Reconnecting in </span><span class="token interpolation"><span class="token punctuation">{</span>reconnect_interval<span class="token punctuation">}</span></span><span class="token string"> seconds.&#39;</span></span><span class="token punctuation">)</span>
            <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>reconnect_interval<span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="42-取消任务" tabindex="-1"><a class="header-anchor" href="#42-取消任务"><span>4.2 取消任务</span></a></h3><p><em>@3.11+</em> Python 3.11 新增了 <code>asyncio.timeout</code>，可用监听一段时间的消息。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">async</span> <span class="token keyword">with</span> client<span class="token punctuation">.</span>messages<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> messages<span class="token punctuation">:</span>
            <span class="token keyword">await</span> client<span class="token punctuation">.</span>subscribe<span class="token punctuation">(</span><span class="token string">&quot;humidity/#&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">async</span> <span class="token keyword">for</span> message <span class="token keyword">in</span> messages<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token comment"># 5 秒后取消请求</span>
        <span class="token keyword">async</span> <span class="token keyword">with</span> asyncio<span class="token punctuation">.</span>timeout<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">await</span> listen<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 忽略 TimeoutError</span>
    <span class="token keyword">except</span> asyncio<span class="token punctuation">.</span>TimeoutError<span class="token punctuation">:</span>
        <span class="token keyword">pass</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Python 3.11 之前的版本可用 <code>task.cancel</code> 来取消：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">async</span> <span class="token keyword">with</span> client<span class="token punctuation">.</span>messages<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> messages<span class="token punctuation">:</span>
            <span class="token keyword">await</span> client<span class="token punctuation">.</span>subscribe<span class="token punctuation">(</span><span class="token string">&quot;humidity/#&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">async</span> <span class="token keyword">for</span> message <span class="token keyword">in</span> messages<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 创建任务</span>
    task <span class="token operator">=</span> loop<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>listen<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># 等待特定的任务</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
    <span class="token comment"># 取消任务</span>
    task<span class="token punctuation">.</span>cancel<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 等待任务取消</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">await</span> task
    <span class="token keyword">except</span> asyncio<span class="token punctuation">.</span>CancelledError<span class="token punctuation">:</span>
        <span class="token keyword">pass</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="43-分享客户端" tabindex="-1"><a class="header-anchor" href="#43-分享客户端"><span>4.3 分享客户端</span></a></h3><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">publish_humidity</span><span class="token punctuation">(</span>client<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> client<span class="token punctuation">.</span>publish<span class="token punctuation">(</span><span class="token string">&quot;humidity/outside&quot;</span><span class="token punctuation">,</span> payload<span class="token operator">=</span><span class="token number">0.38</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">publish_temperature</span><span class="token punctuation">(</span>client<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> client<span class="token punctuation">.</span>publish<span class="token punctuation">(</span><span class="token string">&quot;temperature/outside&quot;</span><span class="token punctuation">,</span> payload<span class="token operator">=</span><span class="token number">28.3</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">await</span> publish_humidity<span class="token punctuation">(</span>client<span class="token punctuation">)</span>
        <span class="token keyword">await</span> publish_temperature<span class="token punctuation">(</span>client<span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="44-过滤请求" tabindex="-1"><a class="header-anchor" href="#44-过滤请求"><span>4.4 过滤请求</span></a></h3><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">async</span> <span class="token keyword">with</span> client<span class="token punctuation">.</span>messages<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> messages<span class="token punctuation">:</span>
            <span class="token keyword">await</span> client<span class="token punctuation">.</span>subscribe<span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">async</span> <span class="token keyword">for</span> message <span class="token keyword">in</span> messages<span class="token punctuation">:</span>
                <span class="token keyword">if</span> message<span class="token punctuation">.</span>topic<span class="token punctuation">.</span>matches<span class="token punctuation">(</span><span class="token string">&quot;humidity/outside&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[humidity/outside] </span><span class="token interpolation"><span class="token punctuation">{</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> message<span class="token punctuation">.</span>topic<span class="token punctuation">.</span>matches<span class="token punctuation">(</span><span class="token string">&quot;+/inside&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[+/inside] </span><span class="token interpolation"><span class="token punctuation">{</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> message<span class="token punctuation">.</span>topic<span class="token punctuation">.</span>matches<span class="token punctuation">(</span><span class="token string">&quot;temperature/#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[temperature/#] </span><span class="token interpolation"><span class="token punctuation">{</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="45-不阻塞运行" tabindex="-1"><a class="header-anchor" href="#45-不阻塞运行"><span>4.5 不阻塞运行</span></a></h3><p>使用 <code>asyncio.TaskGroup</code>（或 <code>asyncio.gather</code>，要求 Python &lt; 3.11）来运行多个任务：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">sleep</span><span class="token punctuation">(</span>seconds<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>seconds<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Slept for </span><span class="token interpolation"><span class="token punctuation">{</span>seconds<span class="token punctuation">}</span></span><span class="token string"> seconds!&quot;</span></span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">async</span> <span class="token keyword">with</span> client<span class="token punctuation">.</span>messages<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> messages<span class="token punctuation">:</span>
            <span class="token keyword">await</span> client<span class="token punctuation">.</span>subscribe<span class="token punctuation">(</span><span class="token string">&quot;humidity/#&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">async</span> <span class="token keyword">for</span> message <span class="token keyword">in</span> messages<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> asyncio<span class="token punctuation">.</span>TaskGroup<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> group<span class="token punctuation">:</span>
        group<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        group<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>listen<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 此处开始监听</span>
        group<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        group<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要和其他异步 Web 框架等结合，我们有下面的方案：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">async</span> <span class="token keyword">with</span> client<span class="token punctuation">.</span>messages<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> messages<span class="token punctuation">:</span>
            <span class="token keyword">await</span> client<span class="token punctuation">.</span>subscribe<span class="token punctuation">(</span><span class="token string">&quot;humidity/#&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">async</span> <span class="token keyword">for</span> message <span class="token keyword">in</span> messages<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">)</span>

background_tasks <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 创建任务</span>
    task <span class="token operator">=</span> loop<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>listen<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># 创建引用以避免被垃圾回收</span>
    background_tasks<span class="token punctuation">.</span>add<span class="token punctuation">(</span>task<span class="token punctuation">)</span>
    task<span class="token punctuation">.</span>add_done_callback<span class="token punctuation">(</span>background_tasks<span class="token punctuation">.</span>remove<span class="token punctuation">)</span>

    <span class="token comment"># 持续运行别的任务</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="46-tls" tabindex="-1"><a class="header-anchor" href="#46-tls"><span>4.6 TLS</span></a></h3><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt
<span class="token keyword">import</span> ssl

tls_params <span class="token operator">=</span> aiomqtt<span class="token punctuation">.</span>TLSParameters<span class="token punctuation">(</span>
    ca_certs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    certfile<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    keyfile<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    cert_reqs<span class="token operator">=</span>ssl<span class="token punctuation">.</span>CERT_REQUIRED<span class="token punctuation">,</span>
    tls_version<span class="token operator">=</span>ssl<span class="token punctuation">.</span>PROTOCOL_TLS<span class="token punctuation">,</span>
    ciphers<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">,</span> tls_params<span class="token operator">=</span>tls_params<span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">await</span> client<span class="token punctuation">.</span>publish<span class="token punctuation">(</span><span class="token string">&quot;humidity/outside&quot;</span><span class="token punctuation">,</span> payload<span class="token operator">=</span><span class="token number">0.38</span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="47-代理" tabindex="-1"><a class="header-anchor" href="#47-代理"><span>4.7 代理</span></a></h3><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt
<span class="token keyword">import</span> socks

proxy_params <span class="token operator">=</span> aiomqtt<span class="token punctuation">.</span>ProxySettings<span class="token punctuation">(</span>
    proxy_type<span class="token operator">=</span>socks<span class="token punctuation">.</span>HTTP<span class="token punctuation">,</span>
    proxy_addr<span class="token operator">=</span><span class="token string">&quot;www.example.com&quot;</span><span class="token punctuation">,</span>
    proxy_rdns<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
    proxy_username<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    proxy_password<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">,</span> proxy<span class="token operator">=</span>proxy_params<span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">await</span> client<span class="token punctuation">.</span>publish<span class="token punctuation">(</span><span class="token string">&quot;humidity/outside&quot;</span><span class="token punctuation">,</span> payload<span class="token operator">=</span><span class="token number">0.38</span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div>`,41);function m(y,g){const s=c("router-link");return i(),l("div",null,[r,n("nav",k,[n("ul",null,[n("li",null,[a(s,{to:"#1-项目简介"},{default:t(()=>[p("1. 项目简介")]),_:1})]),n("li",null,[a(s,{to:"#2-快速开始"},{default:t(()=>[p("2. 快速开始")]),_:1})]),n("li",null,[a(s,{to:"#3-客户端配置"},{default:t(()=>[p("3. 客户端配置")]),_:1})]),n("li",null,[a(s,{to:"#4-最佳实战"},{default:t(()=>[p("4. 最佳实战")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#41-重新连接"},{default:t(()=>[p("4.1 重新连接")]),_:1})]),n("li",null,[a(s,{to:"#42-取消任务"},{default:t(()=>[p("4.2 取消任务")]),_:1})]),n("li",null,[a(s,{to:"#43-分享客户端"},{default:t(()=>[p("4.3 分享客户端")]),_:1})]),n("li",null,[a(s,{to:"#44-过滤请求"},{default:t(()=>[p("4.4 过滤请求")]),_:1})]),n("li",null,[a(s,{to:"#45-不阻塞运行"},{default:t(()=>[p("4.5 不阻塞运行")]),_:1})]),n("li",null,[a(s,{to:"#46-tls"},{default:t(()=>[p("4.6 TLS")]),_:1})]),n("li",null,[a(s,{to:"#47-代理"},{default:t(()=>[p("4.7 代理")]),_:1})])])])])]),d])}const v=e(u,[["render",m],["__file","asyncio-mqtt.html.vue"]]),w=JSON.parse('{"path":"/posts/python/packages/async/asyncio-mqtt.html","title":"asyncio-mqtt - 异步 MQTT 客户端","lang":"zh-CN","frontmatter":{"description":"asyncio-mqtt - 异步 MQTT 客户端 alt alt alt alt alt alt alt alt alt alt alt 1. 项目简介 asyncio-mqtt 提供了基于 paho-mqtt 的现代的、异步的接口。 没有回调 没有更多的返回代码（使用 MqttError 就够了） 优雅的断开连接 与异步代码兼容 完全的类型提示 ...","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/posts/python/packages/async/asyncio-mqtt.html"}],["meta",{"property":"og:site_name","content":"鸭梨"}],["meta",{"property":"og:title","content":"asyncio-mqtt - 异步 MQTT 客户端"}],["meta",{"property":"og:description","content":"asyncio-mqtt - 异步 MQTT 客户端 alt alt alt alt alt alt alt alt alt alt alt 1. 项目简介 asyncio-mqtt 提供了基于 paho-mqtt 的现代的、异步的接口。 没有回调 没有更多的返回代码（使用 MqttError 就够了） 优雅的断开连接 与异步代码兼容 完全的类型提示 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.shields.io/github/license/sbtinstruments/asyncio-mqtt"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-27T04:16:18.000Z"}],["meta",{"property":"article:author","content":"Alex Sun"}],["meta",{"property":"article:modified_time","content":"2024-05-27T04:16:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"asyncio-mqtt - 异步 MQTT 客户端\\",\\"image\\":[\\"https://img.shields.io/github/license/sbtinstruments/asyncio-mqtt\\",\\"https://img.shields.io/pypi/v/asyncio-mqtt\\",\\"https://img.shields.io/pypi/pyversions/asyncio-mqtt.svg\\",\\"https://img.shields.io/pypi/dm/asyncio-mqtt\\",\\"https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/test.yml/badge.svg\\",\\"https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/docs.yml/badge.svg\\",\\"https://img.shields.io/codecov/c/github/sbtinstruments/asyncio-mqtt\\",\\"https://results.pre-commit.ci/badge/github/sbtinstruments/asyncio-mqtt/main.svg\\",\\"https://img.shields.io/badge/typing-strict-green.svg\\",\\"https://img.shields.io/badge/code%20style-black-black\\",\\"https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v1.json\\"],\\"dateModified\\":\\"2024-05-27T04:16:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Alex Sun\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"1. 项目简介","slug":"1-项目简介","link":"#1-项目简介","children":[]},{"level":2,"title":"2. 快速开始","slug":"2-快速开始","link":"#2-快速开始","children":[]},{"level":2,"title":"3. 客户端配置","slug":"3-客户端配置","link":"#3-客户端配置","children":[]},{"level":2,"title":"4. 最佳实战","slug":"4-最佳实战","link":"#4-最佳实战","children":[{"level":3,"title":"4.1 重新连接","slug":"41-重新连接","link":"#41-重新连接","children":[]},{"level":3,"title":"4.2 取消任务","slug":"42-取消任务","link":"#42-取消任务","children":[]},{"level":3,"title":"4.3 分享客户端","slug":"43-分享客户端","link":"#43-分享客户端","children":[]},{"level":3,"title":"4.4 过滤请求","slug":"44-过滤请求","link":"#44-过滤请求","children":[]},{"level":3,"title":"4.5 不阻塞运行","slug":"45-不阻塞运行","link":"#45-不阻塞运行","children":[]},{"level":3,"title":"4.6 TLS","slug":"46-tls","link":"#46-tls","children":[]},{"level":3,"title":"4.7 代理","slug":"47-代理","link":"#47-代理","children":[]}]}],"git":{"createdTime":1716783378000,"updatedTime":1716783378000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":3.86,"words":1157},"filePathRelative":"posts/python/packages/async/asyncio-mqtt.md","localizedDate":"2024年5月27日","excerpt":"\\n<!-- markdownlint-disable MD033 -->\\n<div class=\\"no-link\\">\\n<p><a href=\\"https://github.com/sbtinstruments/asyncio-mqtt/blob/main/LICENSE\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://img.shields.io/github/license/sbtinstruments/asyncio-mqtt\\" alt=\\"alt\\" loading=\\"lazy\\"></a><br>\\n<a href=\\"https://pypi.org/project/asyncio-mqtt\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://img.shields.io/pypi/v/asyncio-mqtt\\" alt=\\"alt\\" loading=\\"lazy\\"></a><br>\\n<a href=\\"https://pypi.org/project/asyncio-mqtt\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://img.shields.io/pypi/pyversions/asyncio-mqtt.svg\\" alt=\\"alt\\" loading=\\"lazy\\"></a><br>\\n<a href=\\"https://pypi.org/project/asyncio-mqtt\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://img.shields.io/pypi/dm/asyncio-mqtt\\" alt=\\"alt\\" loading=\\"lazy\\"></a><br>\\n<a href=\\"https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/test.yml\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/test.yml/badge.svg\\" alt=\\"alt\\" loading=\\"lazy\\"></a><br>\\n<a href=\\"https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/docs.yml\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/docs.yml/badge.svg\\" alt=\\"alt\\" loading=\\"lazy\\"></a><br>\\n<a href=\\"https://codecov.io/gh/sbtinstruments/asyncio-mqtt\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://img.shields.io/codecov/c/github/sbtinstruments/asyncio-mqtt\\" alt=\\"alt\\" loading=\\"lazy\\"></a><br>\\n<a href=\\"https://results.pre-commit.ci/latest/github/sbtinstruments/asyncio-mqtt/main\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://results.pre-commit.ci/badge/github/sbtinstruments/asyncio-mqtt/main.svg\\" alt=\\"alt\\" loading=\\"lazy\\"></a><br>\\n<a href=\\"https://github.com/sbtinstruments/asyncio-mqtt\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://img.shields.io/badge/typing-strict-green.svg\\" alt=\\"alt\\" loading=\\"lazy\\"></a><br>\\n<a href=\\"https://github.com/sbtinstruments/asyncio-mqtt\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://img.shields.io/badge/code style-black-black\\" alt=\\"alt\\" loading=\\"lazy\\"></a><br>\\n<a href=\\"https://github.com/charliermarsh/ruff\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v1.json\\" alt=\\"alt\\" loading=\\"lazy\\"></a></p>\\n</div>","autoDesc":true}');export{v as comp,w as data};
