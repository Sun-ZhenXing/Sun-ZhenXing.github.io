import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as i,c as u,b as n,a,w as p,d as s,e as o}from"./app-DhX54nll.js";const r={},d=n("h1",{id:"python-课程设计django-开发云控制器",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python-课程设计django-开发云控制器"},[n("span",null,"Python 课程设计：Django 开发云控制器")])],-1),k={class:"table-of-contents"},v=n("p",null,[s("本文介绍 Python 课程设计 "),n("em",null,"Django 开发云控制器"),s(" 的设计过程和具体实现。")],-1),m=n("div",{class:"hint-container info"},[n("p",{class:"hint-container-title"},"GitHub"),n("p",null,[s("现在已经开源在 GitHub："),n("a",{href:"https://github.com/Sun-ZhenXing/python-net-controller",target:"_blank",rel:"noopener noreferrer"},"Sun-ZhenXing/python-net-controller"),s("，不过这是实验性的项目，仅仅作文课程设计而不是生产可用的。")])],-1),b={class:"table-of-contents"},g=o('<h2 id="1-项目背景和课程目标" tabindex="-1"><a class="header-anchor" href="#1-项目背景和课程目标"><span>1. 项目背景和课程目标</span></a></h2><h3 id="11-项目背景" tabindex="-1"><a class="header-anchor" href="#11-项目背景"><span>1.1 项目背景</span></a></h3><p>随着 SDN 概念的提出和流行，越来越多的企业开始尝试使用将复杂网络结构定义为可编程的。云控制器将北向开放 RESTful API 给用户使用，南向接口负责接入不同厂商的设备，将不同的设备抽象为一致的接口，大大减少网络运行和维护的成本。</p><h3 id="12-课程目标" tabindex="-1"><a class="header-anchor" href="#12-课程目标"><span>1.2 课程目标</span></a></h3><p>本项目在云控制器项目的背景下，创建一个有代表性的、简单的场景，管理和分配不同的网络端口。</p><p>通过完成接口设计及接口实现达成以下目标：</p><ul><li>Python 语言在企业级项目中的使用</li><li>Django 框架了解及使用</li><li>RESTful API 了解及设计</li><li>Postman 工具学习及使用</li></ul><h2 id="2-课程设计内容" tabindex="-1"><a class="header-anchor" href="#2-课程设计内容"><span>2. 课程设计内容</span></a></h2><h3 id="21-设计目标" tabindex="-1"><a class="header-anchor" href="#21-设计目标"><span>2.1 设计目标</span></a></h3><p>使用 Django 实现一套 RESTful 风格的 API，能够支持 Port 的 CURD，并能够分配可用 IP 给 Port。同时尽可能多地实现其他网络相关结构。</p><h3 id="22-模型设计" tabindex="-1"><a class="header-anchor" href="#22-模型设计"><span>2.2 模型设计</span></a></h3><p>模型 E-R 图结构：</p>',12),q=o(`<p>创建数据库和表：</p><div class="hint-container warning"><p class="hint-container-title">数据模型</p><p>如果定义了数据模型则会使用数据模型，为了方便理解这里使用 SQL 定义。</p></div><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>controller<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">USE</span> <span class="token identifier"><span class="token punctuation">\`</span>controller<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>

<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>Network<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>Network<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>availability_zone_hints<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>status<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>Subnet<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>Subnet<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>cidr<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>network_id<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>Port<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>Port<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>ip<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>subnet_id<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>模型关系约束：</p><ul><li>相同 <code>availability_zone_hints</code> 下 <code>name</code> 不能重复</li><li>同一个 Network 下的 <code>Subnet.cidr</code> 不能重复</li><li>同一个子网下的 <code>ip</code> 不能重复，一般情况下 IP 由系统分配，不会重复</li><li>所有的 <code>id</code> 一律使用 UUID，并作为主键</li><li>网络的状态 <code>status</code> 只能是 <code>ACTIVE</code>（激活）、<code>INACTIVE</code>（未激活）或 <code>DISABLE</code>（禁用的）</li></ul><h3 id="23-接口设计" tabindex="-1"><a class="header-anchor" href="#23-接口设计"><span>2.3 接口设计</span></a></h3><p>接口概览：</p><table><thead><tr><th>接口</th><th>说明</th></tr></thead><tbody><tr><td><code>GET /v1/networks</code></td><td>获取 Network 信息</td></tr><tr><td><code>GET /v1/networks/:id</code></td><td>获取某个 Network 信息</td></tr><tr><td><code>POST /v1/networks</code></td><td>新建 Network</td></tr><tr><td><code>DELETE /v1/networks/:id</code></td><td>删除 Network</td></tr><tr><td><code>PUT /v1/networks/:id</code></td><td>更新某个 Network 的信息</td></tr><tr><td><code>GET /v1/subnets</code></td><td>获取 Subnet 信息</td></tr><tr><td><code>GET /v1/subnets/:id</code></td><td>获取某个 Subnet 信息</td></tr><tr><td><code>POST /v1/subnets</code></td><td>新建 Subnet</td></tr><tr><td><code>DELETE /v1/subnets/:id</code></td><td>删除 Subnet</td></tr><tr><td><code>PUT /v1/subnets/:id</code></td><td>更新某个 Subnet 的信息</td></tr><tr><td><code>GET /v1/ports</code></td><td>获取 Port 信息</td></tr><tr><td><code>GET /v1/ports/:id</code></td><td>获取某个 Port 信息</td></tr><tr><td><code>POST /v1/ports</code></td><td>新建 Port</td></tr><tr><td><code>DELETE /v1/ports/:id</code></td><td>删除 Port</td></tr><tr><td><code>PUT /v1/ports/:id</code></td><td>更新某个 Port 的信息</td></tr></tbody></table><div class="hint-container warning"><p class="hint-container-title">关于鉴权</p><p>现阶段不涉及鉴权相关的内容，如果有鉴权需要，可以参考使用 JWT 授权，或者使用 OAuth 2.0 授权协议，需要确保通信是 SSL 连接。</p></div><h4 id="接口get-v1networks" tabindex="-1"><a class="header-anchor" href="#接口get-v1networks"><span>接口：<code>GET /v1/networks</code></span></a></h4><ul><li><p>内容：获取网络信息</p></li><li><p>参数：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td><code>offset</code></td><td>可选，指定返回记录的开始位置</td></tr><tr><td><code>limit</code></td><td>可选，限制请求数量</td></tr></tbody></table></li><li><p>鉴权：无</p></li><li><p>请求示例：<code>GET /v1/networks?limit=10&amp;offset=20</code></p></li><li><p>返回示例</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;000006ac-ea63-4dd1-83e6-596e10a89366&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;network001&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ACTIVE&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;availability_zone_hints&quot;</span><span class="token operator">:</span> <span class="token string">&quot;az1&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0008f705-d071-4cb9-ba69-eaf97560bd1a&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;network002&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ACTIVE&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;availability_zone_hints&quot;</span><span class="token operator">:</span> <span class="token string">&quot;az1&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;000f0e1d-7c8f-4321-ac02-78be25fce6b7&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;network003&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ACTIVE&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;availability_zone_hints&quot;</span><span class="token operator">:</span> <span class="token string">&quot;az2&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="接口get-v1networksid" tabindex="-1"><a class="header-anchor" href="#接口get-v1networksid"><span>接口：<code>GET /v1/networks/:id</code></span></a></h4><ul><li><p>内容：获取某个网络信息</p></li><li><p>参数：无</p></li><li><p>鉴权：无</p></li><li><p>请求示例：<code>GET /v1/networks/000006ac-ea63-4dd1-83e6-596e10a89366</code></p></li><li><p>返回示例</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;000006ac-ea63-4dd1-83e6-596e10a89366&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;network001&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ACTIVE&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;availability_zone_hints&quot;</span><span class="token operator">:</span> <span class="token string">&quot;az1&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul><h4 id="接口post-v1networks" tabindex="-1"><a class="header-anchor" href="#接口post-v1networks"><span>接口：<code>POST /v1/networks</code></span></a></h4><ul><li><p>内容：新建一个网络</p></li><li><p>参数：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td><code>name</code></td><td>网络的名称</td></tr><tr><td><code>availability_zone_hints</code></td><td>网络区域</td></tr></tbody></table></li><li><p>鉴权：无</p></li><li><p>请求示例：<code>POST /v1/networks</code></p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;network001&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;availability_zone_hints&quot;</span><span class="token operator">:</span> <span class="token string">&quot;az1&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>返回示例</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;000006ac-ea63-4dd1-83e6-596e10a89366&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;network001&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ACTIVE&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;availability_zone_hints&quot;</span><span class="token operator">:</span> <span class="token string">&quot;az1&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul><h4 id="接口delete-v1networksid" tabindex="-1"><a class="header-anchor" href="#接口delete-v1networksid"><span>接口：<code>DELETE /v1/networks/:id</code></span></a></h4><div class="hint-container warning"><p class="hint-container-title">注意</p><p>删除操作是危险的，因为默认的删除是 <strong>级联</strong> 的，这将删除此网络下的所有子网和端口。</p></div><ul><li><p>内容：删除一个网络</p></li><li><p>参数：无</p></li><li><p>鉴权：无</p></li><li><p>请求示例：<code>DELETE /v1/networks/000006ac-ea63-4dd1-83e6-596e10a89366</code></p></li><li><p>返回示例</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;affected&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul><h4 id="接口put-v1networksid" tabindex="-1"><a class="header-anchor" href="#接口put-v1networksid"><span>接口：<code>PUT /v1/networks/:id</code></span></a></h4><ul><li><p>内容：修改一个网络的信息</p></li><li><p>参数：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td><code>name</code></td><td>网络的名称</td></tr><tr><td><code>availability_zone_hints</code></td><td>网络区域</td></tr><tr><td><code>status</code></td><td>网络的状态</td></tr></tbody></table></li><li><p>鉴权：无</p></li><li><p>请求示例：<code>PUT /v1/networks/000006ac-ea63-4dd1-83e6-596e10a89366&quot;</code></p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;network001&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;availability_zone_hints&quot;</span><span class="token operator">:</span> <span class="token string">&quot;az1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ACTIVE&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>返回示例</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;000006ac-ea63-4dd1-83e6-596e10a89366&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;network001&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ACTIVE&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;availability_zone_hints&quot;</span><span class="token operator">:</span> <span class="token string">&quot;az1&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul><h4 id="接口get-v1subnets" tabindex="-1"><a class="header-anchor" href="#接口get-v1subnets"><span>接口：<code>GET /v1/subnets</code></span></a></h4><ul><li><p>内容：获取网络信息</p></li><li><p>参数：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td><code>offset</code></td><td>可选，指定返回记录的开始位置</td></tr><tr><td><code>limit</code></td><td>可选，限制请求数量</td></tr><tr><td><code>network_id</code></td><td>可选，从某个网络中查找</td></tr></tbody></table></li><li><p>鉴权：无</p></li><li><p>请求示例：<code>GET /v1/subnets?limit=15&amp;offset=10</code></p></li><li><p>返回示例</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;000006ac-ea63-4dd1-83e6-596e10a89366&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;subnet001&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;network_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0008f705-d071-4cb9-ba69-eaf97560bd1a&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;cidr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.88.0/24&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;00da810c-ea63-0064-83e6-59a693de1066&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;subnet002&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;network_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0008f705-d071-4cb9-ba69-eaf97560bd1a&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;cidr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.34.0/24&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul><h4 id="接口get-v1subnetsid" tabindex="-1"><a class="header-anchor" href="#接口get-v1subnetsid"><span>接口：<code>GET /v1/subnets/:id</code></span></a></h4><ul><li><p>内容：获取某个子网的信息，返回信息包括可用 IP 数和可用 IP 地址，以 <code>[start, end]</code> 的形式给出</p></li><li><p>参数：无</p></li><li><p>鉴权：无</p></li><li><p>请求示例：<code>GET /v1/subnets/000006ac-ea63-4dd1-83e6-596e10a89366</code></p></li><li><p>返回示例</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;000006ac-ea63-4dd1-83e6-596e10a89366&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;subnet001&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;network_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0008f705-d071-4cb9-ba69-eaf97560bd1a&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;cidr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.88.0/24&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;available_ip&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token property">&quot;available&quot;</span><span class="token operator">:</span> <span class="token number">28</span><span class="token punctuation">,</span>
    <span class="token property">&quot;ips&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.88.1&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.88.25&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.88.28&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.88.32&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;netmask&quot;</span><span class="token operator">:</span> <span class="token string">&quot;255.255.255.0&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="接口post-v1subnets" tabindex="-1"><a class="header-anchor" href="#接口post-v1subnets"><span>接口：<code>POST /v1/subnets</code></span></a></h4><ul><li><p>内容：新建一个子网</p></li><li><p>参数：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td><code>name</code></td><td>子网的名称</td></tr><tr><td><code>network_id</code></td><td>网络 ID</td></tr><tr><td><code>cidr</code></td><td>CIDR</td></tr></tbody></table></li><li><p>鉴权：无</p></li><li><p>请求示例：<code>POST /v1/subnets</code></p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;subnet001&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;network_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;00016ac-ea63-42d1-83e6-8394819effa8&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;cidr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.1.0/24&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>返回示例</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;00da810c-ea63-0064-83e6-59a693de1066&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;subnet002&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;network_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0008f705-d071-4cb9-ba69-eaf97560bd1a&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;cidr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.34.0/24&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul><h4 id="接口delete-v1subnetsid" tabindex="-1"><a class="header-anchor" href="#接口delete-v1subnetsid"><span>接口：<code>DELETE /v1/subnets/:id</code></span></a></h4><div class="hint-container warning"><p class="hint-container-title">注意</p><p>删除操作是危险的，因为默认的删除是 <strong>级联</strong> 的，这将删除此子网下的所有端口。</p></div><ul><li><p>内容：删除一个子网</p></li><li><p>参数：无</p></li><li><p>鉴权：无</p></li><li><p>请求示例：<code>DELETE /v1/subnets/000006ac-ea63-4dd1-83e6-596e10a89366</code></p></li><li><p>返回示例</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;affected&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul><h4 id="接口put-v1subnetsid" tabindex="-1"><a class="header-anchor" href="#接口put-v1subnetsid"><span>接口：<code>PUT /v1/subnets/:id</code></span></a></h4><ul><li><p>内容：修改一个子网的信息，修改 <code>cird</code> 时会重新分配此子网下的所有端口</p></li><li><p>参数：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td><code>name</code></td><td>子网的名称</td></tr><tr><td><code>network_id</code></td><td>网络的 ID</td></tr><tr><td><code>cidr</code></td><td>CIDR</td></tr></tbody></table></li><li><p>鉴权：无</p></li><li><p>请求示例：<code>PUT /v1/subnets/000006ac-ea63-4dd1-83e6-596e10a89366&quot;</code></p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;subnet001&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;network_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;00016ac-ea63-42d1-83e6-8394819effa8&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;cidr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.1.0/24&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>返回示例</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;00da810c-ea63-0064-83e6-59a693de1066&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;subnet002&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;network_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0008f705-d071-4cb9-ba69-eaf97560bd1a&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;cidr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.34.0/24&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul><h4 id="接口get-v1ports" tabindex="-1"><a class="header-anchor" href="#接口get-v1ports"><span>接口：<code>GET /v1/ports</code></span></a></h4><ul><li><p>内容：获取端口信息</p></li><li><p>参数：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td><code>offset</code></td><td>可选，指定返回记录的开始位置</td></tr><tr><td><code>limit</code></td><td>可选，限制请求数量</td></tr><tr><td><code>subnet_id</code></td><td>可选，从某个子网中查找</td></tr></tbody></table></li><li><p>鉴权：无</p></li><li><p>请求示例：<code>GET /v1/ports?limit=15&amp;offset=10</code></p></li><li><p>返回示例</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;000006ac-ea63-4dd1-83e6-596e10a89366&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;port001&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;subnet_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0008f705-d071-4cb9-ba69-eaf97560bd1a&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;ip&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.88.3&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul><h4 id="接口get-v1portsid" tabindex="-1"><a class="header-anchor" href="#接口get-v1portsid"><span>接口：<code>GET /v1/ports/:id</code></span></a></h4><ul><li><p>内容：获取某个端口的信息</p></li><li><p>参数：无</p></li><li><p>鉴权：无</p></li><li><p>请求示例：<code>GET /v1/ports/000006ac-ea63-4dd1-83e6-596e10a89366</code></p></li><li><p>返回示例</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;000006ac-ea63-4dd1-83e6-596e10a89366&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;port001&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;subnet_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0008f705-d071-4cb9-ba69-eaf97560bd1a&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;ip&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.88.3&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul><h4 id="接口post-v1ports" tabindex="-1"><a class="header-anchor" href="#接口post-v1ports"><span>接口：<code>POST /v1/ports</code></span></a></h4><ul><li><p>内容：新建一个端口，系统将自动分配 IP 地址</p></li><li><p>参数：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td><code>name</code></td><td>端口的名称</td></tr><tr><td><code>subnet_id</code></td><td>子网 ID</td></tr></tbody></table></li><li><p>鉴权：无</p></li><li><p>请求示例：<code>POST /v1/ports</code></p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;port001&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;subnet_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;00016ac-ea63-42d1-83e6-8394819effa8&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>返回示例</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;000006ac-ea63-4dd1-83e6-596e10a89366&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;port001&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;subnet_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;00016ac-ea63-42d1-83e6-8394819effa8&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;ip&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.88.3&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul><h4 id="接口delete-v1portsid" tabindex="-1"><a class="header-anchor" href="#接口delete-v1portsid"><span>接口：<code>DELETE /v1/ports/:id</code></span></a></h4><ul><li><p>内容：删除一个端口</p></li><li><p>参数：无</p></li><li><p>鉴权：无</p></li><li><p>请求示例：<code>DELETE /v1/ports/000006ac-ea63-4dd1-83e6-596e10a89366</code></p></li><li><p>返回示例</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;affected&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul><h4 id="接口put-v1portsid" tabindex="-1"><a class="header-anchor" href="#接口put-v1portsid"><span>接口：<code>PUT /v1/ports/:id</code></span></a></h4><ul><li><p>内容：修改一个端口的信息，如果修改 <code>network_id</code> 那么系统将收回 IP 并重新分配</p></li><li><p>参数：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td><code>name</code></td><td>端口的名称</td></tr><tr><td><code>subnet_id</code></td><td>子网 ID</td></tr></tbody></table></li><li><p>鉴权：无</p></li><li><p>请求示例：<code>PUT /v1/ports/000006ac-ea63-4dd1-83e6-596e10a89366&quot;</code></p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;port001&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;network_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;00016ac-ea63-42d1-83e6-8394819effa8&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>返回示例</p><div class="language-json" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;000006ac-ea63-4dd1-83e6-596e10a89366&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;port001&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;subnet_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0008f705-d071-4cb9-ba69-eaf97560bd1a&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;ip&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.88.34&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul><h2 id="3-项目设计步骤" tabindex="-1"><a class="header-anchor" href="#3-项目设计步骤"><span>3. 项目设计步骤</span></a></h2><h3 id="31-项目结构" tabindex="-1"><a class="header-anchor" href="#31-项目结构"><span>3.1 项目结构</span></a></h3><p>下面我们将介绍如何使用 Django 创建一个 RESTful 风格的 Web 应用。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p>`,44),y=o(`<p>各个组件说明：</p><ul><li>Url Patterns，将请求路由到具体处理的视图</li><li>View，处理 HTTP 请求并返回 <code>HTTPResponse</code> 对象</li><li>Serializer，序列化 / 反序列化模型数据</li><li>Models，模型，负责与数据库相关操作</li></ul><p>与常用的的 Django 应用相比，RESTful 风格接口仅仅是多使用了 Serializer 组件。</p><h3 id="32-创建项目" tabindex="-1"><a class="header-anchor" href="#32-创建项目"><span>3.2 创建项目</span></a></h3><p>由于 Django 没有内置支持 RESTful 风格的接口，所以需要安装第三方库：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> djangorestframework
</code></pre></div><p>我们创建示例项目：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>django-admin startproject controller
</code></pre></div><p>打开 <code>mysite/settings.py</code>，然后加入框架配置：</p><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code>INSTALLED_APPS <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">&#39;rest_framework&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">]</span>
</code></pre></div><p>新建示例应用：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> mysite
python manage.py startapp netcontroller
</code></pre></div><p>和上面步骤一样，将 <code>&#39;netcontroller.apps.NetcontrollerConfig&#39;</code> 加入到 <code>INSTALLED_APPS</code> 配置中。</p><p>可以将时区和语言改为中文、北京时间，修改 <code>controller/settings.py</code> 下的配置：</p><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code>LANGUAGE_CODE <span class="token operator">=</span> <span class="token string">&#39;zh-hans&#39;</span>

TIME_ZONE <span class="token operator">=</span> <span class="token string">&#39;Asia/Shanghai&#39;</span>
</code></pre></div><h3 id="33-定义模型" tabindex="-1"><a class="header-anchor" href="#33-定义模型"><span>3.3 定义模型</span></a></h3><p>在 <code>netcontroller/models.py</code> 中添加 <code>Network</code> 类：<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> uuid

<span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models

<span class="token keyword">class</span> <span class="token class-name">Network</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">id</span> <span class="token operator">=</span> models<span class="token punctuation">.</span>UUIDField<span class="token punctuation">(</span>primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> default<span class="token operator">=</span>uuid<span class="token punctuation">.</span>uuid4<span class="token punctuation">,</span> editable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span>
    availability_zone_hints <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">)</span>
    status <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;INACTIVE&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>
        constraints <span class="token operator">=</span> <span class="token punctuation">[</span>
            models<span class="token punctuation">.</span>UniqueConstraint<span class="token punctuation">(</span>
                fields<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;availability_zone_hints&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                name<span class="token operator">=</span><span class="token string">&#39;zone_name_unique&#39;</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>name

<span class="token keyword">class</span> <span class="token class-name">Subnet</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">id</span> <span class="token operator">=</span> models<span class="token punctuation">.</span>UUIDField<span class="token punctuation">(</span>primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> default<span class="token operator">=</span>uuid<span class="token punctuation">.</span>uuid4<span class="token punctuation">,</span> editable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span>
    cidr <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span>
    network_id <span class="token operator">=</span> models<span class="token punctuation">.</span>ForeignKey<span class="token punctuation">(</span>Network<span class="token punctuation">,</span> on_delete<span class="token operator">=</span>models<span class="token punctuation">.</span>CASCADE<span class="token punctuation">)</span>

    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>
        constraints <span class="token operator">=</span> <span class="token punctuation">[</span>
            models<span class="token punctuation">.</span>UniqueConstraint<span class="token punctuation">(</span>
                fields<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;cidr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;network_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                name<span class="token operator">=</span><span class="token string">&#39;cidr_network_id_unique&#39;</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;Port&lt;{}: {}&gt;&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>
            self<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
            self<span class="token punctuation">.</span>cidr
        <span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">Port</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">id</span> <span class="token operator">=</span> models<span class="token punctuation">.</span>UUIDField<span class="token punctuation">(</span>primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> default<span class="token operator">=</span>uuid<span class="token punctuation">.</span>uuid4<span class="token punctuation">,</span> editable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    name <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>
    mac <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> null<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    ip <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>
    subnet_id <span class="token operator">=</span> models<span class="token punctuation">.</span>ForeignKey<span class="token punctuation">(</span>Subnet<span class="token punctuation">,</span> on_delete<span class="token operator">=</span>models<span class="token punctuation">.</span>CASCADE<span class="token punctuation">)</span>

    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>
        constraints <span class="token operator">=</span> <span class="token punctuation">[</span>
            models<span class="token punctuation">.</span>UniqueConstraint<span class="token punctuation">(</span>
                fields<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;ip&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;subnet_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                name<span class="token operator">=</span><span class="token string">&#39;ip_subnet_id_unique&#39;</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;Port&lt;{}: {}&gt;&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>
            self<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
            self<span class="token punctuation">.</span>ip
        <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后执行数据迁移：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python manage.py makemigrations netcontroller
</code></pre></div><p>这时数据库就会将表创建完成。</p><div class="hint-container tip"><p class="hint-container-title">如何使用 UUID 作为主键？</p><p>如果你在定义模型时没有显式的指定主键，那么 Django 会为你定义一个自增的 <code>id</code> 主键，相当于：</p><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models

<span class="token keyword">class</span> <span class="token class-name">SomeModel</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">id</span> <span class="token operator">=</span> models<span class="token punctuation">.</span>AutoField<span class="token punctuation">(</span>primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre></div><p>这个 <code>id</code> 主键从 <code>1</code> 开始计数，每有一条新的数据则加一，保证了主键不重复。</p><p>下面是使用 UUID 定义主键 ID：</p><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> uuid

<span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models

<span class="token keyword">class</span> <span class="token class-name">SomeModel</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">id</span> <span class="token operator">=</span> models<span class="token punctuation">.</span>UUIDField<span class="token punctuation">(</span>primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> default<span class="token operator">=</span>uuid<span class="token punctuation">.</span>uuid1<span class="token punctuation">,</span> editable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre></div><p>关于库 <code>uuid</code> 的用法可以参考 <a href="https://docs.python.org/zh-cn/3/library/uuid.html" target="_blank" rel="noopener noreferrer">Python 标准库：<code>uuid</code></a>。</p></div><h3 id="34-创建序列化类" tabindex="-1"><a class="header-anchor" href="#34-创建序列化类"><span>3.4 创建序列化类</span></a></h3><p>需要创建不同的 <code>Serializer</code> 类来管理序列化 / 反序列化 JSON 数据。目标类需要继承至 <code>rest_framework.serializers.ModelSerializer</code>。父类将自动获取字段集合和验证器。新建 <code>netcontroller/serializers.py</code> 文件：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>http<span class="token punctuation">.</span>response <span class="token keyword">import</span> JsonResponse
<span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> serializers

<span class="token keyword">from</span> <span class="token punctuation">.</span>models <span class="token keyword">import</span> Network<span class="token punctuation">,</span> Port<span class="token punctuation">,</span> Subnet

<span class="token keyword">def</span> <span class="token function">json_success</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> error_msg<span class="token operator">=</span><span class="token string">&#39;ok&#39;</span><span class="token punctuation">,</span> status<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    将数据序列化为 JSON 格式，并返回
    @param \`data\`: 可序列化的对象
    @param \`error_msg\`: \`str\` 错误信息
    @return: \`HttpResponse\`
    &quot;&quot;&quot;</span>
    res_data <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;code&#39;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token string">&#39;msg&#39;</span><span class="token punctuation">:</span> error_msg<span class="token punctuation">,</span>
        <span class="token string">&#39;data&#39;</span><span class="token punctuation">:</span> data<span class="token punctuation">,</span>
        <span class="token operator">**</span>kwargs
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> JsonResponse<span class="token punctuation">(</span>res_data<span class="token punctuation">,</span> status<span class="token operator">=</span>status<span class="token punctuation">,</span> safe<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">json_error</span><span class="token punctuation">(</span>data<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> code<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> error_msg<span class="token operator">=</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> status<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    将错误信息序列化为 JSON 格式，并返回
    @param \`code\`: \`int\` 错误代码
    @param \`error_msg\`: \`str\` 错误信息
    @param \`status\`: \`int\` 状态码
    @return: \`HttpResponse\`
    &quot;&quot;&quot;</span>
    res_data <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;code&#39;</span><span class="token punctuation">:</span> code<span class="token punctuation">,</span>
        <span class="token string">&#39;msg&#39;</span><span class="token punctuation">:</span> error_msg<span class="token punctuation">,</span>
        <span class="token string">&#39;data&#39;</span><span class="token punctuation">:</span> data<span class="token punctuation">,</span>
        <span class="token operator">**</span>kwargs
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> JsonResponse<span class="token punctuation">(</span>res_data<span class="token punctuation">,</span> status<span class="token operator">=</span>status<span class="token punctuation">,</span> safe<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">NetworkSerializer</span><span class="token punctuation">(</span>serializers<span class="token punctuation">.</span>ModelSerializer<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>
        model <span class="token operator">=</span> Network
        fields <span class="token operator">=</span> <span class="token string">&#39;__all__&#39;</span>

<span class="token keyword">class</span> <span class="token class-name">SubnetSerializer</span><span class="token punctuation">(</span>serializers<span class="token punctuation">.</span>ModelSerializer<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>
        model <span class="token operator">=</span> Subnet
        fields <span class="token operator">=</span> <span class="token string">&#39;__all__&#39;</span>

<span class="token keyword">class</span> <span class="token class-name">PortSerializer</span><span class="token punctuation">(</span>serializers<span class="token punctuation">.</span>ModelSerializer<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>
        model <span class="token operator">=</span> Port
        fields <span class="token operator">=</span> <span class="token string">&#39;__all__&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>netcontroller</code> 文件夹下新建 <code>urls.py</code> 文件：</p><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path
<span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> views

urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
    path<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>index<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    path<span class="token punctuation">(</span><span class="token string">&#39;v1/networks/&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>networks<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;networks&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    path<span class="token punctuation">(</span><span class="token string">&#39;v1/networks/&lt;uuid:uuid&gt;/&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>network_id<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;network_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    path<span class="token punctuation">(</span><span class="token string">&#39;v1/subnets/&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>subnets<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;subnets&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    path<span class="token punctuation">(</span><span class="token string">&#39;v1/subnets/&lt;uuid:uuid&gt;/&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>subnet_id<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;subnet_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    path<span class="token punctuation">(</span><span class="token string">&#39;v1/ports/&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>ports<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;ports&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    path<span class="token punctuation">(</span><span class="token string">&#39;v1/ports/&lt;uuid:uuid&gt;/&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>port_id<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;port_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre></div><div class="hint-container tip"><p class="hint-container-title">如何匹配含有 UUID 路径？</p><p><code>path()</code> 默认能接受下面几种参数：<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup></p><ol><li><code>str</code>：匹配除路径分隔符 <code>&#39;/&#39;</code> 之外的非空字符串</li><li><code>int</code>：匹配零或正整数</li><li><code>slug</code>：匹配由 ASCII 字母、数字、连字符、下划线字符组成的字符串，例如，<code>&#39;building-your-1st-django-site&#39;</code></li><li><code>uuid</code>：匹配格式化的 UUID，如 <code>&#39;075194d3-6885-417e-a8a8-6c931e272f00&#39;</code></li></ol><p>这里只需使用 <code>&lt;uuid:id&gt;</code> 即可。</p><p><code>path()</code> 也可以自定义参数匹配类型。此外，还有一种方法，可以在需要正则表达式的情况下使用：</p><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> include<span class="token punctuation">,</span> re_path

urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
    re_path<span class="token punctuation">(</span><span class="token string">r&#39;^index/$&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>index<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    re_path<span class="token punctuation">(</span><span class="token string">r&#39;^bio/(?P&lt;username&gt;\\w+)/$&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>bio<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;bio&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    re_path<span class="token punctuation">(</span><span class="token string">r&#39;^blog/&#39;</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span><span class="token string">&#39;blog.urls&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">]</span>
</code></pre></div><p><code>re_path()</code> 支持使用正则表达式来匹配。详情参考 <a href="https://docs.djangoproject.com/en/4.0/ref/urls/" target="_blank" rel="noopener noreferrer">Django：<code>urls</code></a>。</p></div><p>把 APP 的路由添加到项目的 <code>urlpatterns</code> 中：</p><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib <span class="token keyword">import</span> admin
<span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> include<span class="token punctuation">,</span> path

urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
    path<span class="token punctuation">(</span><span class="token string">&#39;admin/&#39;</span><span class="token punctuation">,</span> admin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>urls<span class="token punctuation">)</span><span class="token punctuation">,</span>
    path<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span><span class="token string">&#39;netcontroller.urls&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

page404 <span class="token operator">=</span> <span class="token string">&#39;netcontroller.views.global_404&#39;</span>
page500 <span class="token operator">=</span> <span class="token string">&#39;netcontroller.views.global_500&#39;</span>
handler404 <span class="token operator">=</span> page404
handler500 <span class="token operator">=</span> page500
</code></pre></div><h3 id="35-编写-api-视图" tabindex="-1"><a class="header-anchor" href="#35-编写-api-视图"><span>3.5 编写 API 视图</span></a></h3><p>编写 <code>netcontroller/views.py</code>：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models
<span class="token keyword">from</span> django<span class="token punctuation">.</span>http <span class="token keyword">import</span> HttpRequest<span class="token punctuation">,</span> HttpResponse
<span class="token keyword">from</span> django<span class="token punctuation">.</span>views <span class="token keyword">import</span> View
<span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> serializers<span class="token punctuation">,</span> status
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>decorators <span class="token keyword">import</span> api_view
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>parsers <span class="token keyword">import</span> JSONParser

<span class="token keyword">from</span> <span class="token punctuation">.</span>models <span class="token keyword">import</span> Network<span class="token punctuation">,</span> Port<span class="token punctuation">,</span> Subnet
<span class="token keyword">from</span> <span class="token punctuation">.</span>serializers <span class="token keyword">import</span> <span class="token punctuation">(</span>NetworkSerializer<span class="token punctuation">,</span> PortSerializer<span class="token punctuation">,</span> SubnetSerializer<span class="token punctuation">,</span>
                          json_error<span class="token punctuation">,</span> json_success<span class="token punctuation">)</span>
<span class="token keyword">from</span> <span class="token punctuation">.</span>utils <span class="token keyword">import</span> allocate_ip<span class="token punctuation">,</span> allocate_ip_many<span class="token punctuation">,</span> compute_ips<span class="token punctuation">,</span> valid_cidr

<span class="token decorator annotation punctuation">@api_view</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span>request<span class="token punctuation">:</span> HttpRequest<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> HttpResponse<span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot; 测试接口 &quot;&quot;&quot;</span>
    <span class="token keyword">return</span> json_success<span class="token punctuation">(</span>request<span class="token punctuation">.</span>GET<span class="token punctuation">,</span> <span class="token string">&#39;Hello, World!&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">basic_view_factory</span><span class="token punctuation">(</span>model<span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">[</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">]</span><span class="token punctuation">,</span> serializer<span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">[</span>serializers<span class="token punctuation">.</span>Serializer<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    基础视图工厂，支持 \`GET\`、\`POST\`
    @param \`model\`: 模型类
    @param \`serializer\`: 序列化类

    视图工厂使用闭包机制复用代码
    &quot;&quot;&quot;</span>

    <span class="token keyword">class</span> <span class="token class-name">_C</span><span class="token punctuation">(</span>View<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        基础视图
        &quot;&quot;&quot;</span>

        <span class="token keyword">def</span> <span class="token function">http_method_not_allowed</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">:</span> HttpRequest<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> HttpResponse<span class="token punctuation">:</span>
            <span class="token keyword">return</span> json_error<span class="token punctuation">(</span>
                error_msg<span class="token operator">=</span><span class="token string">&#39;405 METHOD_NOT_ALLOWED&#39;</span><span class="token punctuation">,</span>
                status<span class="token operator">=</span>status<span class="token punctuation">.</span>HTTP_405_METHOD_NOT_ALLOWED
            <span class="token punctuation">)</span>

        <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">:</span> HttpRequest<span class="token punctuation">)</span><span class="token punctuation">:</span>
            limit <span class="token operator">=</span> request<span class="token punctuation">.</span>GET<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;limit&#39;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>
            offset <span class="token operator">=</span> request<span class="token punctuation">.</span>GET<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;offset&#39;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>
            network_id <span class="token operator">=</span> request<span class="token punctuation">.</span>GET<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;network_id&#39;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>
            subnet_id <span class="token operator">=</span> request<span class="token punctuation">.</span>GET<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;subnet_id&#39;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>
            query <span class="token operator">=</span> model<span class="token punctuation">.</span>objects
            <span class="token keyword">if</span> model <span class="token operator">==</span> Subnet<span class="token punctuation">:</span>
                <span class="token keyword">if</span> network_id <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                    query <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>network_id<span class="token operator">=</span>network_id<span class="token punctuation">)</span>
            <span class="token keyword">elif</span> model <span class="token operator">==</span> Port<span class="token punctuation">:</span>
                <span class="token keyword">if</span> subnet_id <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                    query <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>subnet_id<span class="token operator">=</span>subnet_id<span class="token punctuation">)</span>
            <span class="token keyword">if</span> offset <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                offset <span class="token operator">=</span> <span class="token number">0</span>
            <span class="token keyword">if</span> limit <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                curr_model <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>offset<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                curr_model <span class="token operator">=</span> query<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>offset<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token builtin">int</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">]</span>
            ser <span class="token operator">=</span> serializer<span class="token punctuation">(</span>curr_model<span class="token punctuation">,</span> many<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> json_success<span class="token punctuation">(</span>ser<span class="token punctuation">.</span>data<span class="token punctuation">)</span>

        <span class="token keyword">def</span> <span class="token function">post</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">:</span> HttpRequest<span class="token punctuation">)</span><span class="token punctuation">:</span>
            data <span class="token operator">=</span> JSONParser<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>parse<span class="token punctuation">(</span>request<span class="token punctuation">)</span>
            ser <span class="token operator">=</span> serializer<span class="token punctuation">(</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>
            <span class="token comment"># CIDR 验证器</span>
            <span class="token keyword">if</span> model <span class="token operator">==</span> Subnet<span class="token punctuation">:</span>
                <span class="token keyword">if</span> <span class="token keyword">not</span> valid_cidr<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&#39;cidr&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    <span class="token keyword">return</span> json_error<span class="token punctuation">(</span>error_msg<span class="token operator">=</span><span class="token string">&#39;Invalid CIDR&#39;</span><span class="token punctuation">)</span>
            <span class="token comment"># Port 下分配 IP</span>
            <span class="token keyword">if</span> model <span class="token operator">==</span> Port<span class="token punctuation">:</span>
                cidr <span class="token operator">=</span> Subnet<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token string">&#39;subnet_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cidr
                allocated_ips <span class="token operator">=</span> <span class="token punctuation">(</span>
                    x<span class="token punctuation">.</span>ip <span class="token keyword">for</span> x <span class="token keyword">in</span> Port<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>subnet_id<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token string">&#39;subnet_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                <span class="token punctuation">)</span>
                ip <span class="token operator">=</span> allocate_ip<span class="token punctuation">(</span>cidr<span class="token punctuation">,</span> allocated_ips<span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token keyword">not</span> ip<span class="token punctuation">:</span>
                    <span class="token keyword">return</span> json_error<span class="token punctuation">(</span>error_msg<span class="token operator">=</span><span class="token string">&#39;IP 地址已被分配完&#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    data<span class="token punctuation">[</span><span class="token string">&#39;ip&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> ip
            <span class="token keyword">if</span> ser<span class="token punctuation">.</span>is_valid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">try</span><span class="token punctuation">:</span>
                    ser<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">except</span><span class="token punctuation">:</span>
                    <span class="token keyword">return</span> json_error<span class="token punctuation">(</span>error_msg<span class="token operator">=</span><span class="token string">&#39;数据重复或异常，不满足约束，无法创建&#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> json_success<span class="token punctuation">(</span>ser<span class="token punctuation">.</span>data<span class="token punctuation">,</span> status<span class="token operator">=</span>status<span class="token punctuation">.</span>HTTP_201_CREATED<span class="token punctuation">)</span>
            <span class="token keyword">return</span> json_error<span class="token punctuation">(</span>ser<span class="token punctuation">.</span>errors<span class="token punctuation">)</span>

    <span class="token keyword">return</span> _C

<span class="token keyword">def</span> <span class="token function">include_id_factory</span><span class="token punctuation">(</span>model<span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">[</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">]</span><span class="token punctuation">,</span> serializer<span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">[</span>serializers<span class="token punctuation">.</span>Serializer<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    视图工厂，支持使用 ID 获取对象
    @param \`model\`: 模型类
    @param \`serializer\`: 序列化类

    视图工厂使用闭包机制复用代码
    &quot;&quot;&quot;</span>

    <span class="token keyword">class</span> <span class="token class-name">_C</span><span class="token punctuation">(</span>View<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        包含 ID 的请求视图
        &quot;&quot;&quot;</span>

        <span class="token keyword">def</span> <span class="token function">_get_query_model</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> model_id<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token triple-quoted-string string">&quot;&quot;&quot;
            获取查询模型
            &quot;&quot;&quot;</span>
            query_model <span class="token operator">=</span> model<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span>model_id<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> query_model<span class="token punctuation">:</span>
                <span class="token keyword">return</span> json_error<span class="token punctuation">(</span>
                    error_msg<span class="token operator">=</span><span class="token string">&#39;404 NOT_FOUND&#39;</span><span class="token punctuation">,</span>
                    status<span class="token operator">=</span>status<span class="token punctuation">.</span>HTTP_404_NOT_FOUND
                <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">None</span>
            <span class="token keyword">return</span> query_model<span class="token punctuation">,</span> query_model<span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">:</span> HttpRequest<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
            model_id <span class="token operator">=</span> kwargs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;uuid&#39;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>
            query_model<span class="token punctuation">,</span> curr_model <span class="token operator">=</span> self<span class="token punctuation">.</span>_get_query_model<span class="token punctuation">(</span>model_id<span class="token punctuation">)</span>
            <span class="token keyword">if</span> curr_model <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> query_model
            ser <span class="token operator">=</span> serializer<span class="token punctuation">(</span>query_model<span class="token punctuation">,</span> many<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
            <span class="token comment"># 如果是子网，还需要计算有多少可用地址</span>
            <span class="token keyword">if</span> model <span class="token operator">==</span> Subnet<span class="token punctuation">:</span>
                occupied <span class="token operator">=</span> <span class="token punctuation">(</span>
                    port<span class="token punctuation">.</span>ip <span class="token keyword">for</span> port <span class="token keyword">in</span> Port<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>subnet_id<span class="token operator">=</span>curr_model<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span>
                <span class="token punctuation">)</span>
                <span class="token keyword">return</span> json_success<span class="token punctuation">(</span>
                    ser<span class="token punctuation">.</span>data<span class="token punctuation">,</span>
                    available_ip<span class="token operator">=</span>compute_ips<span class="token punctuation">(</span>curr_model<span class="token punctuation">.</span>cidr<span class="token punctuation">,</span> occupied<span class="token punctuation">)</span>
                <span class="token punctuation">)</span>
            <span class="token keyword">return</span> json_success<span class="token punctuation">(</span>ser<span class="token punctuation">.</span>data<span class="token punctuation">)</span>

        <span class="token keyword">def</span> <span class="token function">put</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">:</span> HttpRequest<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
            model_id <span class="token operator">=</span> kwargs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;uuid&#39;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>
            query_model<span class="token punctuation">,</span> curr_model <span class="token operator">=</span> self<span class="token punctuation">.</span>_get_query_model<span class="token punctuation">(</span>model_id<span class="token punctuation">)</span>
            <span class="token keyword">if</span> curr_model <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> query_model
            data <span class="token operator">=</span> JSONParser<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>parse<span class="token punctuation">(</span>request<span class="token punctuation">)</span>
            <span class="token comment"># 子网</span>
            <span class="token keyword">if</span> model <span class="token operator">==</span> Subnet<span class="token punctuation">:</span>
                <span class="token keyword">if</span> <span class="token keyword">not</span> valid_cidr<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&#39;cidr&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    <span class="token keyword">return</span> json_error<span class="token punctuation">(</span>error_msg<span class="token operator">=</span><span class="token string">&#39;Invalid CIDR&#39;</span><span class="token punctuation">)</span>
                <span class="token comment"># 如果更改了 CIDR，需要重新分配 IP</span>
                <span class="token comment"># ========================================================</span>
                <span class="token comment"># 注意此处需要事务一致性，修改时不可以并发写入</span>
                <span class="token comment"># ========================================================</span>
                <span class="token keyword">if</span> curr_model<span class="token punctuation">.</span>cidr <span class="token operator">!=</span> data<span class="token punctuation">[</span><span class="token string">&#39;cidr&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                    occupied_number <span class="token operator">=</span> Port<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>subnet_id<span class="token operator">=</span>curr_model<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span>
                    new_cird_number <span class="token operator">=</span> compute_ips<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&#39;cidr&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;available&#39;</span><span class="token punctuation">]</span>
                    <span class="token keyword">if</span> new_cird_number <span class="token operator">&lt;</span> occupied_number<span class="token punctuation">:</span>
                        <span class="token keyword">return</span> json_error<span class="token punctuation">(</span>error_msg<span class="token operator">=</span><span class="token string">&#39;无法满足 Port 的 IP 分配&#39;</span><span class="token punctuation">)</span>
                    <span class="token keyword">else</span><span class="token punctuation">:</span>
                        ip_pool <span class="token operator">=</span> allocate_ip_many<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&#39;cidr&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> new_cird_number<span class="token punctuation">)</span>
                        <span class="token comment"># 重新分配 IP</span>
                        <span class="token keyword">for</span> ip<span class="token punctuation">,</span> port <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>ip_pool<span class="token punctuation">,</span> Port<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>subnet_id<span class="token operator">=</span>curr_model<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                            port<span class="token punctuation">.</span>ip <span class="token operator">=</span> ip
                            port<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token comment"># Port</span>
            <span class="token keyword">if</span> model <span class="token operator">==</span> Port<span class="token punctuation">:</span>
                <span class="token comment"># 当 subnet_id 改变时重新分配 IP</span>
                <span class="token keyword">if</span> curr_model<span class="token punctuation">.</span>subnet_id <span class="token operator">!=</span> data<span class="token punctuation">[</span><span class="token string">&#39;subnet_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                    cidr <span class="token operator">=</span> Subnet<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token string">&#39;subnet_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cidr
                    allocated_ips <span class="token operator">=</span> <span class="token punctuation">(</span>
                        x<span class="token punctuation">.</span>ip <span class="token keyword">for</span> x <span class="token keyword">in</span> Port<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>subnet_id<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token string">&#39;subnet_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                    <span class="token punctuation">)</span>
                    ip <span class="token operator">=</span> allocate_ip<span class="token punctuation">(</span>cidr<span class="token punctuation">,</span> allocated_ips<span class="token punctuation">)</span>
                    <span class="token keyword">if</span> <span class="token keyword">not</span> ip<span class="token punctuation">:</span>
                        <span class="token keyword">return</span> json_error<span class="token punctuation">(</span>error_msg<span class="token operator">=</span><span class="token string">&#39;IP 地址已被分配完&#39;</span><span class="token punctuation">)</span>
                    <span class="token keyword">else</span><span class="token punctuation">:</span>
                        data<span class="token punctuation">[</span><span class="token string">&#39;ip&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> ip
            ser <span class="token operator">=</span> serializer<span class="token punctuation">(</span>curr_model<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>
            <span class="token keyword">if</span> ser<span class="token punctuation">.</span>is_valid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                ser<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> json_success<span class="token punctuation">(</span>ser<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
            <span class="token keyword">return</span> json_error<span class="token punctuation">(</span>ser<span class="token punctuation">.</span>errors<span class="token punctuation">)</span>

        <span class="token keyword">def</span> <span class="token function">delete</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">:</span> HttpRequest<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
            model_id <span class="token operator">=</span> kwargs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;uuid&#39;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>
            query_model<span class="token punctuation">,</span> curr_model <span class="token operator">=</span> self<span class="token punctuation">.</span>_get_query_model<span class="token punctuation">(</span>model_id<span class="token punctuation">)</span>
            <span class="token keyword">if</span> curr_model <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> query_model
            affected_lines <span class="token operator">=</span> curr_model<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
            <span class="token keyword">return</span> json_success<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> affected<span class="token operator">=</span>affected_lines<span class="token punctuation">)</span>

    <span class="token keyword">return</span> _C

<span class="token keyword">def</span> <span class="token function">global_404</span><span class="token punctuation">(</span>request<span class="token punctuation">:</span> HttpRequest<span class="token punctuation">,</span> exception<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> HttpResponse<span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    全局 404 页面
    &quot;&quot;&quot;</span>
    <span class="token keyword">return</span> json_error<span class="token punctuation">(</span>
        error_msg<span class="token operator">=</span><span class="token string">&#39;404 NOT_FOUND&#39;</span><span class="token punctuation">,</span>
        status<span class="token operator">=</span>status<span class="token punctuation">.</span>HTTP_404_NOT_FOUND
    <span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">global_500</span><span class="token punctuation">(</span>request<span class="token punctuation">:</span> HttpRequest<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> HttpResponse<span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    全局 500 页面
    &quot;&quot;&quot;</span>
    <span class="token keyword">return</span> json_error<span class="token punctuation">(</span>
        error_msg<span class="token operator">=</span><span class="token string">&#39;500 INTERNAL_SERVER_ERROR&#39;</span><span class="token punctuation">,</span>
        status<span class="token operator">=</span>status<span class="token punctuation">.</span>HTTP_500_INTERNAL_SERVER_ERROR
    <span class="token punctuation">)</span>

networks <span class="token operator">=</span> basic_view_factory<span class="token punctuation">(</span>Network<span class="token punctuation">,</span> NetworkSerializer<span class="token punctuation">)</span><span class="token punctuation">.</span>as_view<span class="token punctuation">(</span><span class="token punctuation">)</span>
subnets <span class="token operator">=</span> basic_view_factory<span class="token punctuation">(</span>Subnet<span class="token punctuation">,</span> SubnetSerializer<span class="token punctuation">)</span><span class="token punctuation">.</span>as_view<span class="token punctuation">(</span><span class="token punctuation">)</span>
ports <span class="token operator">=</span> basic_view_factory<span class="token punctuation">(</span>Port<span class="token punctuation">,</span> PortSerializer<span class="token punctuation">)</span><span class="token punctuation">.</span>as_view<span class="token punctuation">(</span><span class="token punctuation">)</span>
network_id <span class="token operator">=</span> include_id_factory<span class="token punctuation">(</span>Network<span class="token punctuation">,</span> NetworkSerializer<span class="token punctuation">)</span><span class="token punctuation">.</span>as_view<span class="token punctuation">(</span><span class="token punctuation">)</span>
subnet_id <span class="token operator">=</span> include_id_factory<span class="token punctuation">(</span>Subnet<span class="token punctuation">,</span> SubnetSerializer<span class="token punctuation">)</span><span class="token punctuation">.</span>as_view<span class="token punctuation">(</span><span class="token punctuation">)</span>
port_id <span class="token operator">=</span> include_id_factory<span class="token punctuation">(</span>Port<span class="token punctuation">,</span> PortSerializer<span class="token punctuation">)</span><span class="token punctuation">.</span>as_view<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后是分配 IP 和检查 IP 地址的算法，在 <code>netcontroller/utils.py</code> 下面：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> ipaddress
<span class="token keyword">from</span> typing <span class="token keyword">import</span> Iterable

<span class="token keyword">def</span> <span class="token function">allocate_ip</span><span class="token punctuation">(</span>cidr<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> allocated_ips<span class="token punctuation">:</span> Iterable<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    通过 CIDR 分配 IP 地址
    &quot;&quot;&quot;</span>
    allocated_ips_set <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>allocated_ips<span class="token punctuation">)</span>
    ip_network <span class="token operator">=</span> ipaddress<span class="token punctuation">.</span>ip_network<span class="token punctuation">(</span>cidr<span class="token punctuation">)</span>
    <span class="token keyword">for</span> ip <span class="token keyword">in</span> ip_network<span class="token punctuation">.</span>hosts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> ip<span class="token punctuation">.</span>compressed <span class="token keyword">not</span> <span class="token keyword">in</span> allocated_ips_set<span class="token punctuation">:</span>
            <span class="token keyword">return</span> ip<span class="token punctuation">.</span>compressed
    <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>

<span class="token keyword">def</span> <span class="token function">allocate_ip_many</span><span class="token punctuation">(</span>cidr<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Iterable<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    通过 CIDR 分配多个 IP 地址
    &quot;&quot;&quot;</span>
    ip_network <span class="token operator">=</span> ipaddress<span class="token punctuation">.</span>ip_network<span class="token punctuation">(</span>cidr<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token punctuation">(</span>ip_network<span class="token punctuation">.</span>network_address <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">.</span>compressed
        <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">compute_ips</span><span class="token punctuation">(</span>cidr<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> occupied<span class="token punctuation">:</span> Iterable<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    计算子网可用信息
    &quot;&quot;&quot;</span>
    ip_network <span class="token operator">=</span> ipaddress<span class="token punctuation">.</span>ip_network<span class="token punctuation">(</span>cidr<span class="token punctuation">)</span>
    total <span class="token operator">=</span> ip_network<span class="token punctuation">.</span>num_addresses
    occupied_set <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>occupied<span class="token punctuation">)</span>
    <span class="token comment"># 不包括广播地址和网络地址</span>
    available <span class="token operator">=</span> total <span class="token operator">-</span> <span class="token builtin">len</span><span class="token punctuation">(</span>occupied_set<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span>
    ips <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    flag <span class="token operator">=</span> <span class="token boolean">False</span>
    start <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> total <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        curr <span class="token operator">=</span> ip_network<span class="token punctuation">.</span>network_address <span class="token operator">+</span> x
        <span class="token keyword">if</span> curr<span class="token punctuation">.</span>compressed <span class="token keyword">not</span> <span class="token keyword">in</span> occupied_set<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> flag<span class="token punctuation">:</span>
                start <span class="token operator">=</span> curr<span class="token punctuation">.</span>compressed
                flag <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> flag<span class="token punctuation">:</span>
                ips<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token string">&#39;start&#39;</span><span class="token punctuation">:</span> start<span class="token punctuation">,</span>
                    <span class="token string">&#39;end&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>curr <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>compressed
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                flag <span class="token operator">=</span> <span class="token boolean">False</span>
    <span class="token keyword">if</span> flag<span class="token punctuation">:</span>
        ips<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token string">&#39;start&#39;</span><span class="token punctuation">:</span> start<span class="token punctuation">,</span>
            <span class="token string">&#39;end&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>ip_network<span class="token punctuation">.</span>broadcast_address <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>compressed
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;total&#39;</span><span class="token punctuation">:</span> total<span class="token punctuation">,</span>
        <span class="token string">&#39;available&#39;</span><span class="token punctuation">:</span> available<span class="token punctuation">,</span>
        <span class="token string">&#39;ips&#39;</span><span class="token punctuation">:</span> ips<span class="token punctuation">,</span>
        <span class="token string">&#39;netmask&#39;</span><span class="token punctuation">:</span> ip_network<span class="token punctuation">.</span>netmask<span class="token punctuation">.</span>compressed
    <span class="token punctuation">}</span>

<span class="token keyword">def</span> <span class="token function">valid_cidr</span><span class="token punctuation">(</span>cidr<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    检查 CIDR 是否合法
    &quot;&quot;&quot;</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        network <span class="token operator">=</span> ipaddress<span class="token punctuation">.</span>ip_network<span class="token punctuation">(</span>cidr<span class="token punctuation">,</span> strict<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token builtin">bool</span><span class="token punctuation">(</span>network<span class="token punctuation">)</span>
    <span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>

<span class="token keyword">def</span> <span class="token function">valid_ip</span><span class="token punctuation">(</span>ip<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    检查 IP 是否合法
    &quot;&quot;&quot;</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        ip_address <span class="token operator">=</span> ipaddress<span class="token punctuation">.</span>ip_address<span class="token punctuation">(</span>ip<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token builtin">bool</span><span class="token punctuation">(</span>ip_address<span class="token punctuation">)</span>
    <span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意事项</p><ul><li>在编写视图中使用装饰器 <code>@api_view</code> 限定请求方法</li><li>使用 <code>JsonResponse</code> 将字典序列化为字符串并返回结果</li><li>使用 <code>JSONParser().parse(request)</code> 方法从表单中反序列化，该方法的返回值为字典</li></ul></div><p>下面启动应用进行测试即可：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python manage.py runserver
</code></pre></div><h2 id="附录-a什么是-cidr" tabindex="-1"><a class="header-anchor" href="#附录-a什么是-cidr"><span>附录 A：什么是 CIDR</span></a></h2><p>将 IP 地址分为 A 类、B 类、C 类后，会造成 IP 地址的部分浪费。例如，一些连续的 IP 地址，一部分属于 A 类地址，另一部分属于 B 类地址。为了使这些地址聚合以方便管理，出现了 CIDR（无类域间路由）。<sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup></p><p>无类域间路由（Classless Inter-Domain Routing，CIDR）可以将路由集中起来，在路由表中更灵活地定义地址。它不区分 A 类、B 类、C 类地址，而是使用 CIDR 前缀的值指定地址中作为网络 ID 的位数。</p><p>这个前缀可以位于地址空间的任何位置，让管理者能够以更灵活的方式定义子网，以简便的形式指定地址中网络 ID 部分和主机 ID 部分。</p><p>CIDR 标记使用一个斜线 <code>/</code> 分隔符，后面跟一个十进制数值表示地址中网络部分所占的位数。例如，<code>205.123.196.183/25</code> 中的 <code>25</code> 表示地址中 <code>25</code> 位用于网络 ID，相应的掩码为 <code>255.255.255.128</code>。</p><p>使用 <code>netwox</code> 工具列出有多少可用 IP：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>netwox <span class="token number">213</span> <span class="token parameter variable">-i</span> <span class="token number">192.168</span>.1.32/27
</code></pre></div><p>输出：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token number">192.168</span>.1.32
<span class="token number">192.168</span>.1.33
<span class="token number">192.168</span>.1.34
<span class="token punctuation">..</span>.
<span class="token punctuation">..</span>.
<span class="token number">192.168</span>.1.61
<span class="token number">192.168</span>.1.62
<span class="token number">192.168</span>.1.63
</code></pre></div><p>获得掩码和地址段：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>netwox <span class="token number">24</span> <span class="token parameter variable">-i</span> <span class="token number">192.168</span>.1.32/27
</code></pre></div><p>输出：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token number">192.168</span>.1.32-192.168.1.63
<span class="token number">192.168</span>.1.32/27
<span class="token number">192.168</span>.1.32/255.255.255.224
<span class="token punctuation">..</span>.
</code></pre></div><p>你可以使用 <a href="https://purecalculators.com/ip-subnet-calculator" target="_blank" rel="noopener noreferrer">在线 CIDR 计算器</a> 来计算。</p><h2 id="附录-bpython-计算可用-ip-信息" tabindex="-1"><a class="header-anchor" href="#附录-bpython-计算可用-ip-信息"><span>附录 B：Python 计算可用 IP 信息</span></a></h2><p>那么 Python 如何计算 CIDR 的可用 IP 数和相关信息呢？这里仅讨论 IPv4。</p><p>对于标准库，Python 提供了 <code>ipaddress</code> 来计算 IP 信息：</p><div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> ipaddress

cidr <span class="token operator">=</span> <span class="token string">&#39;192.168.1.32/27&#39;</span>
network <span class="token operator">=</span> ipaddress<span class="token punctuation">.</span>IPv4Network<span class="token punctuation">(</span>cidr<span class="token punctuation">)</span>
available_ips <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>ip<span class="token punctuation">.</span>compressed <span class="token keyword">for</span> ip <span class="token keyword">in</span> network<span class="token punctuation">.</span>hosts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;可用 IP 数量:&#39;</span><span class="token punctuation">,</span> network<span class="token punctuation">.</span>num_addresses<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;网络地址 IP:&#39;</span><span class="token punctuation">,</span> network<span class="token punctuation">.</span>network_address<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;子网掩码:&#39;</span><span class="token punctuation">,</span> network<span class="token punctuation">.</span>netmask<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;所有可用 IP:&#39;</span><span class="token punctuation">,</span> available_ips<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;广播地址:&#39;</span><span class="token punctuation">,</span> network<span class="token punctuation">.</span>broadcast_address<span class="token punctuation">)</span>
</code></pre></div><p>注意：可用地址数组（即 <code>network.hosts()</code>）内 <strong>不包含网络地址和广播地址</strong>，这里的广播地址是指掩码运算后的部分全为 <code>1</code> 的 IP 地址。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>手把手教你用 Django 实现 RESTful 接口，知乎，<a href="https://zhuanlan.zhihu.com/p/356405945" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/356405945</a> <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p>Django 知识库：UUID 作为模型主键，知乎，<a href="https://zhuanlan.zhihu.com/p/139525123" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/139525123</a> <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li><li id="footnote3" class="footnote-item"><p>Django 知识库：<code>path()</code> 路径映射，知乎，<a href="https://zhuanlan.zhihu.com/p/139523421" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/139523421</a> <a href="#footnote-ref3" class="footnote-backref">↩︎</a></p></li><li id="footnote4" class="footnote-item"><p>CIDR（无类域间路由）是什么，C 语言中文网，<a href="http://c.biancheng.net/view/6409.html" target="_blank" rel="noopener noreferrer">http://c.biancheng.net/view/6409.html</a> <a href="#footnote-ref4" class="footnote-backref">↩︎</a></p></li></ol></section>`,59);function h(_,w){const t=c("router-link"),e=c("Mermaid");return i(),u("div",null,[d,n("nav",k,[n("ul",null,[n("li",null,[a(t,{to:"#1-项目背景和课程目标"},{default:p(()=>[s("1. 项目背景和课程目标")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#11-项目背景"},{default:p(()=>[s("1.1 项目背景")]),_:1})]),n("li",null,[a(t,{to:"#12-课程目标"},{default:p(()=>[s("1.2 课程目标")]),_:1})])])]),n("li",null,[a(t,{to:"#2-课程设计内容"},{default:p(()=>[s("2. 课程设计内容")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#21-设计目标"},{default:p(()=>[s("2.1 设计目标")]),_:1})]),n("li",null,[a(t,{to:"#22-模型设计"},{default:p(()=>[s("2.2 模型设计")]),_:1})]),n("li",null,[a(t,{to:"#23-接口设计"},{default:p(()=>[s("2.3 接口设计")]),_:1})])])]),n("li",null,[a(t,{to:"#3-项目设计步骤"},{default:p(()=>[s("3. 项目设计步骤")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#31-项目结构"},{default:p(()=>[s("3.1 项目结构")]),_:1})]),n("li",null,[a(t,{to:"#32-创建项目"},{default:p(()=>[s("3.2 创建项目")]),_:1})]),n("li",null,[a(t,{to:"#33-定义模型"},{default:p(()=>[s("3.3 定义模型")]),_:1})]),n("li",null,[a(t,{to:"#34-创建序列化类"},{default:p(()=>[s("3.4 创建序列化类")]),_:1})]),n("li",null,[a(t,{to:"#35-编写-api-视图"},{default:p(()=>[s("3.5 编写 API 视图")]),_:1})])])]),n("li",null,[a(t,{to:"#附录-a什么是-cidr"},{default:p(()=>[s("附录 A：什么是 CIDR")]),_:1})]),n("li",null,[a(t,{to:"#附录-bpython-计算可用-ip-信息"},{default:p(()=>[s("附录 B：Python 计算可用 IP 信息")]),_:1})])])]),v,m,n("nav",b,[n("ul",null,[n("li",null,[a(t,{to:"#1-项目背景和课程目标"},{default:p(()=>[s("1. 项目背景和课程目标")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#11-项目背景"},{default:p(()=>[s("1.1 项目背景")]),_:1})]),n("li",null,[a(t,{to:"#12-课程目标"},{default:p(()=>[s("1.2 课程目标")]),_:1})])])]),n("li",null,[a(t,{to:"#2-课程设计内容"},{default:p(()=>[s("2. 课程设计内容")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#21-设计目标"},{default:p(()=>[s("2.1 设计目标")]),_:1})]),n("li",null,[a(t,{to:"#22-模型设计"},{default:p(()=>[s("2.2 模型设计")]),_:1})]),n("li",null,[a(t,{to:"#23-接口设计"},{default:p(()=>[s("2.3 接口设计")]),_:1})])])]),n("li",null,[a(t,{to:"#3-项目设计步骤"},{default:p(()=>[s("3. 项目设计步骤")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#31-项目结构"},{default:p(()=>[s("3.1 项目结构")]),_:1})]),n("li",null,[a(t,{to:"#32-创建项目"},{default:p(()=>[s("3.2 创建项目")]),_:1})]),n("li",null,[a(t,{to:"#33-定义模型"},{default:p(()=>[s("3.3 定义模型")]),_:1})]),n("li",null,[a(t,{to:"#34-创建序列化类"},{default:p(()=>[s("3.4 创建序列化类")]),_:1})]),n("li",null,[a(t,{to:"#35-编写-api-视图"},{default:p(()=>[s("3.5 编写 API 视图")]),_:1})])])]),n("li",null,[a(t,{to:"#附录-a什么是-cidr"},{default:p(()=>[s("附录 A：什么是 CIDR")]),_:1})]),n("li",null,[a(t,{to:"#附录-bpython-计算可用-ip-信息"},{default:p(()=>[s("附录 B：Python 计算可用 IP 信息")]),_:1})])])]),g,a(e,{id:"mermaid-72",code:"eJylj0EKwjAQRfeeYi7QC7gWN4IUPECYNqEOpokkE0Ub726bUKjpzs5uPm/+n6/cgbBz2O9gnLPip3U3iLGq4gCX0BjFeyDT6iBVQrIGM1JbVwCzx5C2aTw7Mh2QhPpUigb7fLbQ8IGksSFN/BJva5S4kmFfYp6RQ1Y/y9f+D25JuhWX64jR5JhNcthUfEMU3Vd10vc/OV/1knXk"}),q,a(e,{id:"mermaid-1057",code:"eJxtjM0OgjAQhO88xWZP5cAbGA+EIyam/lyMhwqrNCEtdktIfHrpasCDc+i005nv3vup6UyIcCwzmKXpORJHKIotnHStcD5gb2Kk4Bhz6fB4ewQzdICAEiS1NlATrXdQ6yVM40Q6W5pYodgXkiRvKRwoWNPbFwWF6/1vdedb6mfYxzGHTUqr8qKwMtGUhgnz6zJcaT9r+SXXiq9oTTx4x5S9ASj6TP0="}),y])}const P=l(r,[["render",h],["__file","index.html.vue"]]),T=JSON.parse('{"path":"/posts/python/awesome/cloud-controller/","title":"Python 课程设计：Django 开发云控制器","lang":"zh-CN","frontmatter":{"description":"Python 课程设计：Django 开发云控制器 本文介绍 Python 课程设计 Django 开发云控制器 的设计过程和具体实现。 GitHub 现在已经开源在 GitHub：Sun-ZhenXing/python-net-controller，不过这是实验性的项目，仅仅作文课程设计而不是生产可用的。 1. 项目背景和课程目标 1.1 项目背景 ...","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/posts/python/awesome/cloud-controller/"}],["meta",{"property":"og:site_name","content":"鸭梨"}],["meta",{"property":"og:title","content":"Python 课程设计：Django 开发云控制器"}],["meta",{"property":"og:description","content":"Python 课程设计：Django 开发云控制器 本文介绍 Python 课程设计 Django 开发云控制器 的设计过程和具体实现。 GitHub 现在已经开源在 GitHub：Sun-ZhenXing/python-net-controller，不过这是实验性的项目，仅仅作文课程设计而不是生产可用的。 1. 项目背景和课程目标 1.1 项目背景 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-27T04:16:18.000Z"}],["meta",{"property":"article:author","content":"Alex Sun"}],["meta",{"property":"article:modified_time","content":"2024-05-27T04:16:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python 课程设计：Django 开发云控制器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-27T04:16:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Alex Sun\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"1. 项目背景和课程目标","slug":"1-项目背景和课程目标","link":"#1-项目背景和课程目标","children":[{"level":3,"title":"1.1 项目背景","slug":"11-项目背景","link":"#11-项目背景","children":[]},{"level":3,"title":"1.2 课程目标","slug":"12-课程目标","link":"#12-课程目标","children":[]}]},{"level":2,"title":"2. 课程设计内容","slug":"2-课程设计内容","link":"#2-课程设计内容","children":[{"level":3,"title":"2.1 设计目标","slug":"21-设计目标","link":"#21-设计目标","children":[]},{"level":3,"title":"2.2 模型设计","slug":"22-模型设计","link":"#22-模型设计","children":[]},{"level":3,"title":"2.3 接口设计","slug":"23-接口设计","link":"#23-接口设计","children":[]}]},{"level":2,"title":"3. 项目设计步骤","slug":"3-项目设计步骤","link":"#3-项目设计步骤","children":[{"level":3,"title":"3.1 项目结构","slug":"31-项目结构","link":"#31-项目结构","children":[]},{"level":3,"title":"3.2 创建项目","slug":"32-创建项目","link":"#32-创建项目","children":[]},{"level":3,"title":"3.3 定义模型","slug":"33-定义模型","link":"#33-定义模型","children":[]},{"level":3,"title":"3.4 创建序列化类","slug":"34-创建序列化类","link":"#34-创建序列化类","children":[]},{"level":3,"title":"3.5 编写 API 视图","slug":"35-编写-api-视图","link":"#35-编写-api-视图","children":[]}]},{"level":2,"title":"附录 A：什么是 CIDR","slug":"附录-a什么是-cidr","link":"#附录-a什么是-cidr","children":[]},{"level":2,"title":"附录 B：Python 计算可用 IP 信息","slug":"附录-bpython-计算可用-ip-信息","link":"#附录-bpython-计算可用-ip-信息","children":[]}],"git":{"createdTime":1716783378000,"updatedTime":1716783378000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":15.78,"words":4733},"filePathRelative":"posts/python/awesome/cloud-controller/index.md","localizedDate":"2024年5月27日","excerpt":"\\n\\n<p>本文介绍 Python 课程设计 <em>Django 开发云控制器</em> 的设计过程和具体实现。</p>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">GitHub</p>\\n<p>现在已经开源在 GitHub：<a href=\\"https://github.com/Sun-ZhenXing/python-net-controller\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Sun-ZhenXing/python-net-controller</a>，不过这是实验性的项目，仅仅作文课程设计而不是生产可用的。</p>\\n</div>","autoDesc":true}');export{P as comp,T as data};
