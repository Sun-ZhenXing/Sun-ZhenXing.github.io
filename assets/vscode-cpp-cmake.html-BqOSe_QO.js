import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as h,c as p,b as i,a,w as e,e as d,d as n}from"./app-mQJDQ8JG.js";const k={},r=i("p",null,"本文介绍 VS Code 配置 C++ CMake 开发环境的方式。",-1),o={class:"table-of-contents"},c=d(`<h2 id="1-安装后端" tabindex="-1"><a class="header-anchor" href="#1-安装后端"><span>1. 安装后端</span></a></h2><h2 id="11-编译后端" tabindex="-1"><a class="header-anchor" href="#11-编译后端"><span>1.1 编译后端</span></a></h2><p>Linux 和 Mac 可使用系统的编译后端，也可以安装 Clang 等编译套件。</p><p>可选的后端有：</p><ul><li>系统默认</li><li>Clang</li><li>MinGW</li><li>MSVC（仅 Windows）</li></ul><div class="hint-container tip"><p class="hint-container-title">Windows 选择后端</p><p>Windows 推荐使用 MSVC（Microsoft Visual Studio）作为编译后端，因为 MinGW 对 Windows 支持性不完整，许多库无法支持。MSVC 对 Windows 有完整支持。下面主要介绍 Windows 的环境配置，Linux 与 Mac 只需少量配置即可。</p></div><p>安装 MSVC 编译套件：</p><ol><li><a href="https://visualstudio.microsoft.com/zh-hans/downloads/" target="_blank" rel="noopener noreferrer">下载 Visual Studio</a>，并安装</li><li>安装时选择 C/C++ 的支持</li></ol><p>安装后确保 VS 的工具包在路径上，类似于 <code>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.29.30133\\bin\\Hostx64\\x64</code>。</p><h3 id="12-cmake" tabindex="-1"><a class="header-anchor" href="#12-cmake"><span>1.2 CMake</span></a></h3><p>安装 <a href="https://cmake.org/" target="_blank" rel="noopener noreferrer">CMake</a> 即可，也可以使用 Python 安装 CMake：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cmake</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>安装结束后测试 CMake 版本，确保较新即可：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --version</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># cmake version 3.24.1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># CMake suite maintained and supported by Kitware (kitware.com/cmake).</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="2-vs-code-配置" tabindex="-1"><a class="header-anchor" href="#2-vs-code-配置"><span>2. VS Code 配置</span></a></h2><h3 id="21-安装扩展" tabindex="-1"><a class="header-anchor" href="#21-安装扩展"><span>2.1 安装扩展</span></a></h3><p>下面的包可能有变动，只需选择官方的版本即可：</p><ol><li>C/C++ 语言包</li><li>C/C++ 扩展包</li><li>CMake 包</li></ol><p>现在已经可以使用 VS Code 创建/调试 CMake 项目了。</p><h3 id="22-配置设置" tabindex="-1"><a class="header-anchor" href="#22-配置设置"><span>2.2 配置设置</span></a></h3><p><code>.vscode/c_cpp_properties.json</code> 配置文件：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;configurations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">            &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Win32&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">            &quot;includePath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &quot;\${default}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &quot;\${workspaceFolder}/**&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">            &quot;defines&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &quot;_DEBUG&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &quot;UNICODE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                &quot;_UNICODE&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">            &quot;windowsSdkVersion&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;10.0.19044.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">            &quot;compilerPath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/cl.exe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">            &quot;cStandard&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;c17&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">            &quot;cppStandard&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;c++17&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">            &quot;intelliSenseMode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;windows-msvc-x64&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意几个要点：</p><ul><li><code>includePath</code> 为语法检查的 Include，和 <code>CMakeLists.txt</code> 中的 Include 不冲突</li><li><code>windowsSdkVersion</code> 必须是当前 Windows 可用的 SDK 版本</li><li><code>compilerPath</code> 必须在路径（PATH）中</li></ul><h2 id="3-创建项目" tabindex="-1"><a class="header-anchor" href="#3-创建项目"><span>3. 创建项目</span></a></h2><p>新建一个文件夹作为你的项目，并包含 <code>CMakeLists.txt</code>：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">-cmake)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#ABB2BF;">VERSION</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> 3.9)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;">CMAKE_RUNTIME_OUTPUT_DIRECTORY</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> \${CMAKE_CURRENT_SOURCE_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/build)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;">CMAKE_BUILD_TYPE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> Release)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD 17)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD_REQUIRED </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ON</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(CMAKE_CXX_EXTENSIONS </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">OFF</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">\${PROJECT_NAME}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> src/main.cpp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>src/main.cpp</code> 是主文件：</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &lt;iostream&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#ABB2BF;">    std</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;Hello, CMake!&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#ABB2BF;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">::endl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在状态栏选择：</p><ol><li>CMake: Release</li><li>Visual Studio 2019 Release: amd64</li></ol><p>选择后自动配置，如果没有配置可以使用 VS Code 命令 <code>CMake: Configure</code> 进行配置，点击下面 Build 按钮即可生成目标。</p>`,32);function u(g,C){const s=t("router-link");return h(),p("div",null,[r,i("nav",o,[i("ul",null,[i("li",null,[a(s,{to:"#1-安装后端"},{default:e(()=>[n("1. 安装后端")]),_:1})]),i("li",null,[a(s,{to:"#11-编译后端"},{default:e(()=>[n("1.1 编译后端")]),_:1}),i("ul",null,[i("li",null,[a(s,{to:"#12-cmake"},{default:e(()=>[n("1.2 CMake")]),_:1})])])]),i("li",null,[a(s,{to:"#2-vs-code-配置"},{default:e(()=>[n("2. VS Code 配置")]),_:1}),i("ul",null,[i("li",null,[a(s,{to:"#21-安装扩展"},{default:e(()=>[n("2.1 安装扩展")]),_:1})]),i("li",null,[a(s,{to:"#22-配置设置"},{default:e(()=>[n("2.2 配置设置")]),_:1})])])]),i("li",null,[a(s,{to:"#3-创建项目"},{default:e(()=>[n("3. 创建项目")]),_:1})])])]),c])}const v=l(k,[["render",u],["__file","vscode-cpp-cmake.html.vue"]]),y=JSON.parse('{"path":"/posts/envs/vscode-cpp-cmake.html","title":"VS Code 配置 C++ CMake 开发环境","lang":"zh-CN","frontmatter":{"title":"VS Code 配置 C++ CMake 开发环境","date":"2022-12-16T00:00:00.000Z","category":["环境搭建"],"tag":["VS Code","CMake"],"description":"本文介绍 VS Code 配置 C++ CMake 开发环境的方式。","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/posts/envs/vscode-cpp-cmake.html"}],["meta",{"property":"og:site_name","content":"鸭梨"}],["meta",{"property":"og:title","content":"VS Code 配置 C++ CMake 开发环境"}],["meta",{"property":"og:description","content":"本文介绍 VS Code 配置 C++ CMake 开发环境的方式。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-02T16:16:12.000Z"}],["meta",{"property":"article:author","content":"Alex Sun"}],["meta",{"property":"article:tag","content":"VS Code"}],["meta",{"property":"article:tag","content":"CMake"}],["meta",{"property":"article:published_time","content":"2022-12-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-02T16:16:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"VS Code 配置 C++ CMake 开发环境\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-12-16T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-02T16:16:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Alex Sun\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"1. 安装后端","slug":"1-安装后端","link":"#1-安装后端","children":[]},{"level":2,"title":"1.1 编译后端","slug":"11-编译后端","link":"#11-编译后端","children":[{"level":3,"title":"1.2 CMake","slug":"12-cmake","link":"#12-cmake","children":[]}]},{"level":2,"title":"2. VS Code 配置","slug":"2-vs-code-配置","link":"#2-vs-code-配置","children":[{"level":3,"title":"2.1 安装扩展","slug":"21-安装扩展","link":"#21-安装扩展","children":[]},{"level":3,"title":"2.2 配置设置","slug":"22-配置设置","link":"#22-配置设置","children":[]}]},{"level":2,"title":"3. 创建项目","slug":"3-创建项目","link":"#3-创建项目","children":[]}],"git":{"createdTime":1671179187000,"updatedTime":1709396172000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":5}]},"readingTime":{"minutes":1.82,"words":545},"filePathRelative":"posts/envs/vscode-cpp-cmake.md","localizedDate":"2022年12月16日","excerpt":"<p>本文介绍 VS Code 配置 C++ CMake 开发环境的方式。</p>\\n","autoDesc":true}');export{v as comp,y as data};
